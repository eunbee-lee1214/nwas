{"version":3,"file":"js/app.0c65fd2c.js","mappings":"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","sources":["webpack://nwas_site/./src/plugins/webfontloader.js","webpack://nwas_site/./src/store/progressStore.js","webpack://nwas_site/./src/components/SideBar.vue","webpack://nwas_site/./src/components/SideBar.vue?799c","webpack://nwas_site/./src/store/dropZoneStore.js","webpack://nwas_site/./src/store/topologyStore.js","webpack://nwas_site/./src/components/GlobalDialog.vue","webpack://nwas_site/./src/components/GlobalDialog.vue?f98d","webpack://nwas_site/./src/build-time.js","webpack://nwas_site/./src/App.vue","webpack://nwas_site/./src/App.vue?7ccd","webpack://nwas_site/./src/store/itemStore.js","webpack://nwas_site/./src/views/Step1View.vue","webpack://nwas_site/./src/views/Step1View.vue?eef9","webpack://nwas_site/./src/views/Step2View.vue","webpack://nwas_site/./src/views/Step2View.vue?0df9","webpack://nwas_site/./src/views/Step3View.vue","webpack://nwas_site/./src/views/Step3View.vue?fb60","webpack://nwas_site/./src/views/Step4View.vue","webpack://nwas_site/./src/views/Step4View.vue?a000","webpack://nwas_site/./src/router/index.js","webpack://nwas_site/./src/plugins/vuetify.js","webpack://nwas_site/./src/main.js","webpack://nwas_site/webpack/bootstrap","webpack://nwas_site/webpack/runtime/chunk loaded","webpack://nwas_site/webpack/runtime/compat get default export","webpack://nwas_site/webpack/runtime/create fake namespace object","webpack://nwas_site/webpack/runtime/define property getters","webpack://nwas_site/webpack/runtime/ensure chunk","webpack://nwas_site/webpack/runtime/get javascript chunk filename","webpack://nwas_site/webpack/runtime/get mini-css chunk filename","webpack://nwas_site/webpack/runtime/global","webpack://nwas_site/webpack/runtime/hasOwnProperty shorthand","webpack://nwas_site/webpack/runtime/load script","webpack://nwas_site/webpack/runtime/make namespace object","webpack://nwas_site/webpack/runtime/publicPath","webpack://nwas_site/webpack/runtime/jsonp chunk loading","webpack://nwas_site/webpack/startup"],"sourcesContent":["/**\n * plugins/webfontloader.js\n *\n * webfontloader documentation: https://github.com/typekit/webfontloader\n */\n\nexport async function loadFonts () {\n  const webFontLoader = await import(/* webpackChunkName: \"webfontloader\" */'webfontloader')\n\n  webFontLoader.load({\n    google: {\n      families: ['Roboto:100,300,400,500,700,900&display=swap'],\n    },\n  })\n}\n","import { defineStore } from \"pinia\";\r\nimport { ref } from \"vue\";\r\n\r\nexport const useProgressStore = defineStore(\"progressStore\", () => {\r\n  var currentStep = ref(1);\r\n  const stepConditions = ref({\r\n    // test\r\n    step1: true,\r\n    step2: false,\r\n    step3: false,\r\n    step4: false\r\n  });\r\n\r\n  function setStepCondition(step, status) {\r\n    stepConditions.value[step] = status;\r\n    currentStep = step.replace(/\\D/g, \"\");\r\n  }\r\n\r\n  function isStepCompleted(step) {\r\n    return stepConditions.value[step] || false; // 기본값을 false로 설정\r\n  }\r\n\r\n  function allstepCondition(){\r\n    return stepConditions;\r\n\r\n  }\r\n\r\n  return { currentStep, stepConditions, setStepCondition, isStepCompleted, allstepCondition };\r\n});","<template>\r\n  <aside>\r\n    <div class=\"logo\">\r\n      <img :src=\"logoURL\" alt=\"Vue\" />\r\n    </div>\r\n\r\n    <div class=\"menu\">\r\n      <div\r\n        v-for=\"step in steps\"\r\n        :key=\"step.path\"\r\n        class=\"button\"\r\n        :class=\"{\r\n          active: isActive(step.path), //  현재 Step 강조\r\n          completed: isCompleted(step.key), //  완료된 Step 강조\r\n        }\"\r\n        @click=\"navigateToStep(step.path, step.key)\"\r\n      >\r\n        <span class=\"material-icons\">{{ step.label }}</span>\r\n        <span class=\"text\">{{ step.name }}</span>\r\n      </div>\r\n    </div>\r\n  </aside>\r\n\r\n    <v-dialog v-model=\"showDialog\" max-width=\"400px\">\r\n    <v-card>\r\n      <v-card-title> 경고 </v-card-title>\r\n      <v-card-text> {{ dialogText }} </v-card-text>\r\n      <v-card-actions>\r\n        <v-btn color=\"primary\" @click=\"showDialog = false\">닫기</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useProgressStore } from \"@/store/progressStore\";\r\nimport logoURL from \"../assets/mrtLogo.png\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst progressStore = useProgressStore();\r\n\r\nvar dialogText = ref(\"\");\r\nconst showDialog = ref(false);\r\n\r\nconst steps = [\r\n  { path: \"/step1\", name: \"송배전망 배치\", label: \"STEP1\", key: \"step1\" },\r\n  { path: \"/step2\", name: \"리스트 생성\", label: \"STEP2\", key: \"step2\" },\r\n  { path: \"/step3\", name: \"좌표설정\", label: \"STEP3\", key: \"step3\" },\r\n  { path: \"/step4\", name: \"결과출력\", label: \"STEP4\", key: \"step4\" },\r\n];\r\n\r\n//  현재 Step인지 확인\r\nconst isActive = (path) => route.path === path;\r\n\r\n//  완료된 Step인지 확인 (computed 사용)\r\nconst isCompleted = (stepKey) =>\r\n  computed(() => progressStore.isStepCompleted(stepKey)).value;\r\n\r\n//  Step 클릭 시 이동 (완료된 Step만 이동 가능)\r\nconst navigateToStep = (path, stepKey) => {\r\n  if (progressStore.isStepCompleted(stepKey) || path === \"/step1\") {\r\n    router.push(path);\r\n  } else {\r\n    dialogText = \"이전 Step을 완료해야 이동할 수 있습니다.\";\r\n    showDialog.value = true;\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\naside {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: var(--background-light);\r\n  color: var(--text-dark);\r\n  height: var(--header-size);\r\n  padding: 0 10%;\r\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease-in-out;\r\n  border-bottom: 2px solid var(--primary-color);\r\n\r\n  .logo {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    img {\r\n      margin-left: 40px;\r\n      width: 120px;\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  .menu {\r\n    display: flex;\r\n    gap: 50px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: 80%;\r\n\r\n    .button {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      gap: 8px;\r\n      text-decoration: none;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      font-size: 1rem;\r\n      font-weight: bold;\r\n      position: relative;\r\n      background: none;\r\n      cursor: not-allowed; // 기본적으로 클릭 방지\r\n      transition: all 0.3s ease-in-out;\r\n      border: 2px solid transparent;\r\n\r\n      .material-icons {\r\n        font-size: 1.3rem;\r\n        transition: all 0.3s ease;\r\n        color: var(--primary-color);\r\n      }\r\n\r\n      /*  현재 Step 강조 */\r\n      &.active {\r\n        color: #007bff;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n        cursor: default;\r\n\r\n        &::after {\r\n          content: \"\";\r\n          position: absolute;\r\n          bottom: -4px;\r\n          left: 50%;\r\n          width: 50%;\r\n          height: 3px;\r\n          background: #007bff;\r\n          transform: translateX(-50%);\r\n          border-radius: 2px;\r\n          transition: width 0.3s ease-in-out;\r\n        }\r\n\r\n        .material-icons {\r\n          color: #007bff;\r\n        }\r\n      }\r\n\r\n      /*  완료된 Step 강조 (클릭 가능) */\r\n      &.completed {\r\n        color: #007bff;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n        cursor: pointer;\r\n\r\n        .material-icons {\r\n          color: #007bff;\r\n        }\r\n\r\n        &:hover {\r\n          transform: scale(1.08);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import script from \"./SideBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SideBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SideBar.vue?vue&type=style&index=0&id=aa9567cc&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aa9567cc\"]])\n\nexport default __exports__","// Pinia에 글로벌 데이터 저장\r\n\r\nimport { defineStore } from 'pinia';\r\nimport { ref } from 'vue';\r\n\r\nexport const useDropZoneStore = defineStore('dropZoneStore', () => {\r\n  // test\r\n  const dropZones = ref([\r\n    { id: 1, name: \"발전소\", items: [], isValid: true },\r\n    { id: 2, name: \"765kV\", items: [], isValid: true },\r\n    { id: 3, name: \"345kV\", items: [], isValid: true },\r\n    { id: 4, name: \"154kV\", items: [], isValid: true },\r\n    { id: 5, name: \"22.9kV\", items: [], isValid: true },\r\n    { id: 6, name: \"수요지역\", items: [], isValid: true },\r\n    { id: 7, name: \"NWAs\", items: [], isValid: true },\r\n  ]);\r\n\r\n  let localCapacity = 0;\r\n\r\n  // const dropZones = ref([{\"id\":1,\"name\":\"발전소\",\"items\":[{\"label\":\"원전-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"cee16ee2-76d9-4c72-b5eb-f1a6d5b1bee8\",\"lat\":0,\"lng\":0},{\"label\":\"석탄화력-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"64c215e3-7993-4016-94a1-062cdb3984fc\",\"lat\":0,\"lng\":0}],\"isValid\":true},{\"id\":2,\"name\":\"765kV\",\"items\":[{\"label\":\"765-A\",\"id\":2,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":5700,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"b385c3e6-bc31-4299-b10f-ac6b6b29072d\",\"lat\":0,\"lng\":0}],\"isValid\":true},{\"id\":3,\"name\":\"345kV\",\"items\":[{\"label\":\"345-A\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a914e02f-f86c-4395-83f8-ce386948a239\",\"lat\":0,\"lng\":0},{\"label\":\"345-B\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"d521523b-d3e5-4881-af36-31417ce84ea8\",\"lat\":0,\"lng\":0}],\"isValid\":true},{\"id\":4,\"name\":\"154kV\",\"items\":[{\"label\":\"154-A\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"bec57019-eeac-46e6-83fa-b9454da8d13c\",\"lat\":0,\"lng\":0},{\"label\":\"154-B\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a8f1fba9-1801-4192-bb2b-6e3eb1ac1e9b\",\"lat\":0,\"lng\":0},{\"label\":\"154-C\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"4e740a37-fe29-4319-8d96-49ec246168d0\",\"lat\":0,\"lng\":0}],\"isValid\":true},{\"id\":5,\"name\":\"22.9kV\",\"items\":[{\"label\":\"22.9-A\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"증축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"신축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"증축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"신축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":3000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":3000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":false,\"uniqueId\":\"19aaafe1-74d4-4106-9a4d-bcbc70c17304\",\"lat\":0,\"lng\":0},{\"label\":\"22.9-B\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"증축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"신축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"증축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]},{\"constructionType\":\"신축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":3000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":3000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":false,\"uniqueId\":\"06aee00f-ce0b-45d7-9bf6-9e82522b8b29\",\"lat\":0,\"lng\":0}],\"isValid\":true},{\"id\":6,\"name\":\"수요지역\",\"items\":[{\"label\":\"수요지역\",\"id\":6,\"property\":[{\"name\":\"주소\",\"values\":[{\"data\":\"광주 북구 첨단연신로 12\",\"unit\":\"-\",\"modify\":false}]},{\"name\":\"용량\",\"values\":[{\"data\":\"30\",\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"일별 전력 사용시간\",\"values\":[{\"data\":\"8\",\"unit\":\"hr/day\",\"modify\":false}]}],\"uniqueId\":\"a1e218ea-8e9b-4883-9e42-e82d325ff2e5\",\"lat\":0,\"lng\":0,\"setProperty\":true}],\"isValid\":true},{\"id\":7,\"name\":\"NWAs\",\"items\":[{\"label\":\"풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"신축\",\"costs\":[{\"name\":\"기자재 및 공사비\",\"data\":2000,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"인허가/설계감리\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"기타 부대비\",\"data\":150,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"유지비용\",\"data\":30,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"접속비용\",\"data\":200,\"unit\":\"천원/kW\",\"modify\":true}]},{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":30,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":200,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"5da7e2f6-e621-434e-82b3-e29e87a1cdbf\",\"lat\":0,\"lng\":0},{\"label\":\"해상풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"신축\",\"costs\":[{\"name\":\"기자재 및 공사비\",\"data\":2928,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"인허가/설계감리\",\"data\":732,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"기타 부대비\",\"data\":731,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"유지비용\",\"data\":194,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"접속비용\",\"data\":791,\"unit\":\"천원/kW\",\"modify\":true}]},{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":194,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":791,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"2f34d955-c2fc-4d4e-aef5-cd37ac9b7710\",\"lat\":0,\"lng\":0},{\"label\":\"태양광-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"신축\",\"costs\":[{\"name\":\"건설단가\",\"data\":1418,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"유지비용\",\"data\":75,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"태양광 거래 단가 (SMP)\",\"data\":149,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true}]},{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":75,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"태양광 거래 단가 (SMP)\",\"data\":149,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"9982be70-724c-41d9-9a83-a17dfeecfa9f\",\"lat\":0,\"lng\":0}],\"isValid\":true}]);\r\n\r\n\r\n const getAvailableSuffix = (usedSuffixes) => {\r\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  for (let i = 0; i < alphabet.length; i++) {\r\n    const suffix = alphabet[i];\r\n    if (!usedSuffixes.includes(suffix)) {\r\n      return suffix;\r\n    }\r\n  }\r\n  return null; // 너무 많아지면 예외처리 필요\r\n};\r\n\r\n\r\nconst addItemToZone = (zoneId, item) => {\r\n  const zone = dropZones.value.find((z) => z.id === zoneId);\r\n\r\n  if (zoneId === item.id && zone) {\r\n    // 기존 같은 label을 가진 아이템의 suffix 조사\r\n    const existingSuffixes = zone.items\r\n      .filter(i => i.label.startsWith(item.label + '-'))\r\n      .map(i => i.label.split('-')[1]) // 추출된 A, B, C\r\n      .filter(suffix => /^[A-Z]$/.test(suffix)); // 알파벳만 필터링\r\n\r\n    const newSuffix = getAvailableSuffix(existingSuffixes);\r\n    const newLabel = newSuffix ? `${item.label}-${newSuffix}` : item.label;\r\n\r\n    const newItem = {\r\n      ...item,\r\n      label: newLabel,\r\n      uniqueId: crypto.randomUUID(),\r\n      lat: 0,\r\n      lng: 0\r\n    };\r\n\r\n    zone.items.push(newItem);\r\n  }\r\n\r\n  updateDemandVol();\r\n};\r\n\r\n  const saveDemandArea = (address, capacity, newHoursPerDay) => {\r\n    const zone6 = dropZones.value.find((zone) => zone.id === 6);\r\n\r\n    if (zone6) {\r\n      zone6.items = [{\r\n        label: '수요지역', id: 6, property: [\r\n          {\r\n            name: \"주소\",\r\n            values: [\r\n              {\r\n                \"data\": address,\r\n                \"unit\": \"-\",\r\n                \"modify\": false\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            name: \"용량\",\r\n            values: [\r\n              {\r\n                \"data\": capacity,\r\n                \"unit\": \"MW\",\r\n                \"modify\": false\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            name: \"일별 전력 사용시간\",\r\n            values: [\r\n              {\r\n                \"data\": newHoursPerDay,\r\n                \"unit\": \"hr/day\",\r\n                \"modify\": false\r\n              }\r\n            ]\r\n          },\r\n        ],\r\n        uniqueId: crypto.randomUUID(), lat: 0, lng: 0, setProperty: true\r\n      }];\r\n\r\n      localCapacity = capacity;\r\n    }\r\n\r\n    updateDemandVol();\r\n  };\r\n\r\n  const updateDemandVol = () =>{\r\n\r\n\r\n    dropZones.value.forEach(category => {\r\n      category.items.forEach(item => {\r\n        if (item.property) {\r\n          \r\n          item.property.forEach(prop => {\r\n            if (prop.name === \"수요용량\") {\r\n              prop.values.forEach(value => {\r\n                if (value.unit === \"MW\") {\r\n                  console.log(item.label, '아이템 수요용량 수정')\r\n                  value.data = localCapacity;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  const removeItemFromZone = (zoneId, uniqueId) => {\r\n    const zone = dropZones.value.find(zone => zone.id === zoneId);\r\n\r\n    if (zone) {\r\n      zone.items = zone.items.filter(item => item.uniqueId !== uniqueId);\r\n    }\r\n  };\r\n\r\n  const getProperty = (uniqueId) => {\r\n    for (const group of dropZones.value) {\r\n      const item = group.items.find(element => element.uniqueId === uniqueId);\r\n      if (item) return item; // ✅ 첫 번째 일치하는 요소를 즉시 반환\r\n    }\r\n    return null; // ✅ 찾지 못했을 경우 null 반환\r\n  };\r\n\r\n  return { dropZones, addItemToZone, saveDemandArea, removeItemFromZone, getProperty }\r\n});","import { defineStore } from \"pinia\";\r\nimport { ref } from \"vue\";\r\n\r\nexport const useTopologyStore = defineStore(\"topologyStore\", () => {\r\n  const MAX_TOPOLOGY_COUNT = 6; // 최대 6개까지만 저장\r\n  const topologyList = ref([]);\r\n\r\n  // const topologyList = ref([[{\"label\":\"원전-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"cee16ee2-76d9-4c72-b5eb-f1a6d5b1bee8\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"765-A\",\"id\":2,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":5700,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"b385c3e6-bc31-4299-b10f-ac6b6b29072d\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"345-A\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a914e02f-f86c-4395-83f8-ce386948a239\",\"lat\":35.34857931770654,\"lng\":126.68364113194464},{\"label\":\"154-A\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"bec57019-eeac-46e6-83fa-b9454da8d13c\",\"lat\":35.13745376503943,\"lng\":126.65062889312279},{\"label\":\"22.9-A\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"증축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":true,\"uniqueId\":\"19aaafe1-74d4-4106-9a4d-bcbc70c17304\",\"lat\":35.40344660425432,\"lng\":126.97477882725714},{\"label\":\"수요지역\",\"id\":6,\"property\":[{\"name\":\"주소\",\"values\":[{\"data\":\"광주 북구 첨단연신로 12\",\"unit\":\"-\",\"modify\":false}]},{\"name\":\"용량\",\"values\":[{\"data\":\"30\",\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"일별 전력 사용시간\",\"values\":[{\"data\":\"8\",\"unit\":\"hr/day\",\"modify\":false}]}],\"uniqueId\":\"a1e218ea-8e9b-4883-9e42-e82d325ff2e5\",\"lat\":35.1996206,\"lng\":126.8638917,\"setProperty\":true},{\"label\":\"해상풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":194,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":791,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"2f34d955-c2fc-4d4e-aef5-cd37ac9b7710\",\"lat\":34.97246849492835,\"lng\":127.09562843663214,\"setProperty\":true}],[{\"label\":\"석탄화력-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"64c215e3-7993-4016-94a1-062cdb3984fc\",\"lat\":35.56223889368352,\"lng\":126.74681251866339},{\"label\":\"765-A\",\"id\":2,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":5700,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"b385c3e6-bc31-4299-b10f-ac6b6b29072d\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"345-B\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"d521523b-d3e5-4881-af36-31417ce84ea8\",\"lat\":35.50412601334231,\"lng\":126.91435402256964},{\"label\":\"154-B\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a8f1fba9-1801-4192-bb2b-6e3eb1ac1e9b\",\"lat\":35.37545775205288,\"lng\":126.80861061436651},{\"label\":\"22.9-B\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"신축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":true,\"uniqueId\":\"06aee00f-ce0b-45d7-9bf6-9e82522b8b29\",\"lat\":35.42874848728769,\"lng\":127.07571684373409},{\"label\":\"수요지역\",\"id\":6,\"property\":[{\"name\":\"주소\",\"values\":[{\"data\":\"광주 북구 첨단연신로 12\",\"unit\":\"-\",\"modify\":false}]},{\"name\":\"용량\",\"values\":[{\"data\":\"30\",\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"일별 전력 사용시간\",\"values\":[{\"data\":\"8\",\"unit\":\"hr/day\",\"modify\":false}]}],\"uniqueId\":\"a1e218ea-8e9b-4883-9e42-e82d325ff2e5\",\"lat\":35.1996206,\"lng\":126.8638917,\"setProperty\":true},{\"label\":\"풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"신축\",\"costs\":[{\"name\":\"기자재 및 공사비\",\"data\":2000,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"인허가/설계감리\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"기타 부대비\",\"data\":150,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"유지비용\",\"data\":30,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"접속비용\",\"data\":200,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"5da7e2f6-e621-434e-82b3-e29e87a1cdbf\",\"lat\":35.136158363824414,\"lng\":127.03589140428096,\"setProperty\":true}],[{\"label\":\"원전-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"cee16ee2-76d9-4c72-b5eb-f1a6d5b1bee8\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"765-A\",\"id\":2,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":5700,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"b385c3e6-bc31-4299-b10f-ac6b6b29072d\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"345-A\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a914e02f-f86c-4395-83f8-ce386948a239\",\"lat\":35.34857931770654,\"lng\":126.68364113194464},{\"label\":\"154-B\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a8f1fba9-1801-4192-bb2b-6e3eb1ac1e9b\",\"lat\":35.37545775205288,\"lng\":126.80861061436651},{\"label\":\"22.9-A\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"증축\",\"powerType\":\"DC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":4000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":2500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":0,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":true,\"uniqueId\":\"19aaafe1-74d4-4106-9a4d-bcbc70c17304\",\"lat\":35.40344660425432,\"lng\":126.97477882725714},{\"label\":\"수요지역\",\"id\":6,\"property\":[{\"name\":\"주소\",\"values\":[{\"data\":\"광주 북구 첨단연신로 12\",\"unit\":\"-\",\"modify\":false}]},{\"name\":\"용량\",\"values\":[{\"data\":\"30\",\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"일별 전력 사용시간\",\"values\":[{\"data\":\"8\",\"unit\":\"hr/day\",\"modify\":false}]}],\"uniqueId\":\"a1e218ea-8e9b-4883-9e42-e82d325ff2e5\",\"lat\":35.1996206,\"lng\":126.8638917,\"setProperty\":true},{\"label\":\"태양광-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":75,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"태양광 거래 단가 (SMP)\",\"data\":149,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"9982be70-724c-41d9-9a83-a17dfeecfa9f\",\"lat\":35.21741888385357,\"lng\":127.10112160069464,\"setProperty\":true},{\"label\":\"해상풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":194,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":791,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"2f34d955-c2fc-4d4e-aef5-cd37ac9b7710\",\"lat\":34.97246849492835,\"lng\":127.09562843663214,\"setProperty\":true}],[{\"label\":\"원전-A\",\"id\":1,\"setProperty\":true,\"uniqueId\":\"cee16ee2-76d9-4c72-b5eb-f1a6d5b1bee8\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"765-A\",\"id\":2,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":5700,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"b385c3e6-bc31-4299-b10f-ac6b6b29072d\",\"lat\":35.3575397900563,\"lng\":126.49824684483526},{\"label\":\"345-A\",\"id\":3,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":2060,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"a914e02f-f86c-4395-83f8-ce386948a239\",\"lat\":35.34857931770654,\"lng\":126.68364113194464},{\"label\":\"154-A\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"bec57019-eeac-46e6-83fa-b9454da8d13c\",\"lat\":35.13745376503943,\"lng\":126.65062889312279},{\"label\":\"154-C\",\"id\":4,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"송전설로 건설단가\",\"values\":[{\"data\":102,\"unit\":\"백만원/km\",\"modify\":true}]},{\"name\":\"송전 접속단가\",\"values\":[{\"name\":\"기본 단가\",\"data\":667.61,\"unit\":\"원/kW\",\"modify\":true},{\"name\":\"사용 단가\",\"data\":1.42,\"unit\":\"원/kWh\",\"modify\":true}]},{\"name\":\"송전 손실단가\",\"values\":[{\"name\":\"원전\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"석탄화력\",\"data\":0.03,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"가스복합\",\"data\":-1.39,\"unit\":\"원/MWh\",\"modify\":true},{\"name\":\"소수력\",\"data\":0,\"unit\":\"원/MWh\",\"modify\":true}]}],\"setProperty\":false,\"uniqueId\":\"4e740a37-fe29-4319-8d96-49ec246168d0\",\"lat\":35.03327893274684,\"lng\":127.02125363756767},{\"label\":\"22.9-B\",\"id\":5,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"여유용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"최대 수용 용량\",\"values\":[{\"data\":13,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"배전망 건설 단가\",\"values\":[{\"constructionType\":\"신축\",\"powerType\":\"AC\",\"costs\":[{\"name\":\"배전 선로 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"전주 공사 단가\",\"data\":2000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"선로 토체 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"변압기 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"차단기 단가\",\"data\":500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"토목 건설 단가\",\"data\":1500,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"운용 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true},{\"name\":\"부대 비용 단가\",\"data\":1000,\"unit\":\"만원/km\",\"modify\":true}]}]}],\"setProperty\":true,\"uniqueId\":\"06aee00f-ce0b-45d7-9bf6-9e82522b8b29\",\"lat\":35.42874848728769,\"lng\":127.07571684373409},{\"label\":\"수요지역\",\"id\":6,\"property\":[{\"name\":\"주소\",\"values\":[{\"data\":\"광주 북구 첨단연신로 12\",\"unit\":\"-\",\"modify\":false}]},{\"name\":\"용량\",\"values\":[{\"data\":\"30\",\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"일별 전력 사용시간\",\"values\":[{\"data\":\"8\",\"unit\":\"hr/day\",\"modify\":false}]}],\"uniqueId\":\"a1e218ea-8e9b-4883-9e42-e82d325ff2e5\",\"lat\":35.1996206,\"lng\":126.8638917,\"setProperty\":true},{\"label\":\"풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"신축\",\"costs\":[{\"name\":\"기자재 및 공사비\",\"data\":2000,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"인허가/설계감리\",\"data\":150,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"기타 부대비\",\"data\":150,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"유지비용\",\"data\":30,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"접속비용\",\"data\":200,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"5da7e2f6-e621-434e-82b3-e29e87a1cdbf\",\"lat\":35.136158363824414,\"lng\":127.03589140428096,\"setProperty\":true},{\"label\":\"해상풍력-A\",\"id\":7,\"property\":[{\"name\":\"수요용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":false}]},{\"name\":\"계통 유연계수\",\"values\":[{\"data\":0,\"unit\":\"(0.00~0.10)\",\"modify\":true}]},{\"name\":\"여유 용량\",\"values\":[{\"data\":0,\"unit\":\"MW\",\"modify\":true}]},{\"name\":\"발전소 구축단가\",\"values\":[{\"constructionType\":\"기존\",\"costs\":[{\"name\":\"유지비용\",\"data\":194,\"unit\":\"천원/kW\",\"modify\":true},{\"name\":\"풍력 거래 단가\",\"data\":138,\"unit\":\"천원/kWh\",\"modify\":true},{\"name\":\"접속비용\",\"data\":791,\"unit\":\"천원/kW\",\"modify\":true}]}]}],\"uniqueId\":\"2f34d955-c2fc-4d4e-aef5-cd37ac9b7710\",\"lat\":34.97246849492835,\"lng\":127.09562843663214,\"setProperty\":true}]]);\r\n\r\n  // 새로운 경로 추가 (최대 6개 제한)\r\n  const addTopology = (newTopology) => {\r\n    if (topologyList.value.length >= MAX_TOPOLOGY_COUNT) {\r\n      return false; // 6개 초과 시 추가 방지\r\n    }\r\n    if (!topologyList.value.includes(newTopology)) {\r\n      topologyList.value.push(newTopology);\r\n    }\r\n\r\n    return true; // 정상 추가됨\r\n  };\r\n\r\n  const isNotAdd = () => {\r\n    return topologyList.value.length >= MAX_TOPOLOGY_COUNT;\r\n  }\r\n\r\n  const removeTopology = (index) => {\r\n    topologyList.value.splice(index, 1);\r\n  };\r\n\r\n  const setTopologyList = (newList) => {\r\n    topologyList.value = newList;\r\n  };\r\n\r\n  const clearTopologyList = () => {\r\n    topologyList.value = [];\r\n  }\r\n\r\n  const setCoordinates = (uniqueId, lat, lng) => {\r\n    if (!Array.isArray(topologyList.value)) {\r\n      console.error(\"topologyList.value가 배열이 아닙니다.\", topologyList.value);\r\n      return;\r\n    }\r\n  \r\n    // 모든 그룹을 순회 (이중 배열을 처리하기 위해 두 번 forEach 사용)\r\n    topologyList.value.forEach((group) => {\r\n      if (!Array.isArray(group)) return;\r\n  \r\n      group.forEach((item) => {\r\n        if (item.uniqueId === uniqueId) {\r\n          console.log(`좌표 업데이트: ${uniqueId} → lat: ${lat}, lng: ${lng}`);\r\n  \r\n          // Vue의 반응형 유지 (Object.assign 사용)\r\n          Object.assign(item, { lat, lng });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return { topologyList, addTopology, isNotAdd, removeTopology, setTopologyList, clearTopologyList, setCoordinates};\r\n});","<template>\r\n  <v-dialog\r\n    v-model=\"dialog\"\r\n    max-width=\"600px\"\r\n    persistent\r\n    v-if=\"topologyData.length > 0\"\r\n  >\r\n    <v-card>\r\n      <v-card-title class=\"dialog-title\">\r\n        {{ label }}\r\n      </v-card-title>\r\n\r\n      <v-card-text>\r\n        <v-table v-if=\"topologyData.length\" class=\"styled-table\">\r\n          <thead>\r\n            <tr>\r\n              <th class=\"col-item group-header\">항목</th>\r\n              <th class=\"col-value group-header\">값</th>\r\n              <th class=\"col-unit group-header\">단위</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <template v-for=\"(item, index) in topologyData\" :key=\"index\">\r\n              <template\r\n                v-if=\"\r\n                  isSimpleArray(item.values) &&\r\n                  item.name !== '배전망 건설 단가' &&\r\n                  item.name !== '발전소 구축단가'\r\n                \"\r\n              >\r\n                <tr>\r\n                  <td :class=\"['td-item', `depth-${item.depth}`]\">\r\n                    {{ item.name }}\r\n                  </td>\r\n                  <td class=\"td-value\">\r\n                    <v-text-field\r\n                      v-if=\"item.values[0].modify\"\r\n                      v-model=\"item.values[0].data\"\r\n                      dense\r\n                      variant=\"plain\"\r\n                      type=\"number\"\r\n                      class=\"input-field\"\r\n                    ></v-text-field>\r\n                    <span v-else class=\"blue-text\">\r\n                      {{ item.values[0].data }}\r\n                    </span>\r\n                  </td>\r\n                  <td class=\"td-unit\">{{ item.values[0]?.unit || \"\" }}</td>\r\n                </tr>\r\n              </template>\r\n\r\n              <!-- 22.9 전용 배전망 건설 단가 -->\r\n              <!-- ✅ 배전망 건설 단가 & 태양광 발전소 구축 단가 -->\r\n              <template v-else-if=\"isConstructionCost(item)\">\r\n                <tr>\r\n                  <th colspan=\"3\" :class=\"['bold-text', `depth-${item.depth}`]\">\r\n                    {{ item.name }}\r\n                  </th>\r\n                </tr>\r\n\r\n                <!-- ✅ 라디오 버튼: 229 배전망 건설 단가 (증축/신축 + AC/DC) -->\r\n                <tr v-if=\"item.name === '배전망 건설 단가'\">\r\n                  <td colspan=\"3\">\r\n                    <v-radio-group\r\n                      v-model=\"expansionType\"\r\n                      class=\"radio-group\"\r\n                      hide-details\r\n                    >\r\n                      <v-radio label=\"증축\" value=\"증축\"></v-radio>\r\n                      <v-radio label=\"신축\" value=\"신축\"></v-radio>\r\n                    </v-radio-group>\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"item.name === '배전망 건설 단가'\">\r\n                  <td colspan=\"3\">\r\n                    <v-radio-group\r\n                      v-model=\"powerType\"\r\n                      class=\"radio-group\"\r\n                      hide-details\r\n                    >\r\n                      <v-radio label=\"AC\" value=\"AC\"></v-radio>\r\n                      <v-radio label=\"DC\" value=\"DC\"></v-radio>\r\n                    </v-radio-group>\r\n                  </td>\r\n                </tr>\r\n\r\n                <!-- ✅ 라디오 버튼: 태양광 발전소 구축 단가 (신축/기존) -->\r\n                <tr v-if=\"item.name === '발전소 구축단가'\">\r\n                  <td colspan=\"3\">\r\n                    <v-radio-group\r\n                      v-model=\"solarConstructionType\"\r\n                      class=\"radio-group\"\r\n                      hide-details\r\n                    >\r\n                      <v-radio label=\"기존\" value=\"기존\"></v-radio>\r\n                      <v-radio label=\"신축\" value=\"신축\"></v-radio>\r\n                    </v-radio-group>\r\n                  </td>\r\n                </tr>\r\n\r\n                <!-- ✅ 필터링된 건설 단가 데이터 -->\r\n                <template v-if=\"getFilteredConstructionCosts(item).length > 0\">\r\n                  <tr\r\n                    v-for=\"(\r\n                      costItem, costIndex\r\n                    ) in getFilteredConstructionCosts(item)\"\r\n                    :key=\"costIndex\"\r\n                  >\r\n                    <td class=\"td-item depth-2\">{{ costItem.name }}</td>\r\n                    <td class=\"td-value\">\r\n                      <v-text-field\r\n                        v-if=\"costItem.modify\"\r\n                        v-model=\"costItem.data\"\r\n                        dense\r\n                        variant=\"plain\"\r\n                        type=\"number\"\r\n                        class=\"input-field\"\r\n                        @input=\"updateValue(costItem, $event)\"\r\n                      ></v-text-field>\r\n                      <span v-else class=\"blue-text\">{{ costItem.data }}</span>\r\n                    </td>\r\n                    <td class=\"td-unit\">{{ costItem.unit }}</td>\r\n                  </tr>\r\n                </template>\r\n                <p v-else class=\"text-center red-text\">해당 단가 데이터 없음</p>\r\n              </template>\r\n\r\n              <!-- 일반 속성 -->\r\n              <template v-else-if=\"hasNamedValues(item.values)\">\r\n                <tr>\r\n                  <th colspan=\"3\" class=\"bold-text\">\r\n                    {{ item.name }}\r\n                  </th>\r\n                </tr>\r\n                <template\r\n                  v-for=\"(subItem, subIndex) in item.values\"\r\n                  :key=\"subIndex\"\r\n                >\r\n                  <tr>\r\n                    <td class=\"td-item\">\r\n                      {{ subItem.name }}\r\n                    </td>\r\n                    <td class=\"td-value\">\r\n                      <v-text-field\r\n                        v-if=\"subItem.modify\"\r\n                        v-model=\"subItem.data\"\r\n                        dense\r\n                        variant=\"plain\"\r\n                        type=\"number\"\r\n                        class=\"input-field\"\r\n                      ></v-text-field>\r\n                      <span v-else class=\"blue-text\">\r\n                        {{ subItem.data }}\r\n                      </span>\r\n                    </td>\r\n                    <td class=\"td-unit\">{{ subItem.unit }}</td>\r\n                  </tr>\r\n                </template>\r\n              </template>\r\n\r\n              <!-- 수요지역 전용 -->\r\n              <!-- ✅ 수요지역 정보 추가 -->\r\n            </template>\r\n          </tbody>\r\n        </v-table>\r\n        <p v-else class=\"text-center\">데이터 없음</p>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <v-btn color=\"primary\" @click=\"save\">저장</v-btn>\r\n        <v-btn color=\"grey\" @click=\"closeDialog\">취소</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits, nextTick } from \"vue\";\r\nimport { useDropZoneStore } from \"../store/dropZoneStore\";\r\nimport { useTopologyStore } from \"../store/topologyStore\";\r\n\r\nconst topologyStore = useTopologyStore();\r\n\r\nconst dropZoneStore = useDropZoneStore();\r\n\r\nconst props = defineProps({\r\n  modelValue: Boolean,\r\n  label: String,\r\n  id: Number,\r\n  uniqueId: String,\r\n});\r\n\r\nconst emit = defineEmits([\"update:modelValue\", \"saveData\"]);\r\n\r\nconst dropZones = ref([]);\r\nconst dialog = ref(false);\r\nconst topologyData = ref([]);\r\nconst expansionType = ref(\"증축\");\r\nconst powerType = ref(\"AC\");\r\nconst solarConstructionType = ref(\"기존\");\r\n\r\nconst updateValue = (item, index, event) => {\r\n  if (!event || !item.values[index]) return;\r\n\r\n  // ✅ 새로운 객체를 만들어 Vue의 반응형 시스템이 감지하도록 변경\r\n  const newValues = [...item.values];\r\n  newValues[index] = {\r\n    ...newValues[index],\r\n    data: event.target ? event.target.value : event,\r\n  };\r\n\r\n  item.values = newValues; // ✅ 새 배열을 할당하여 참조 공유 문제 해결\r\n};\r\n\r\n// ✅ `uniqueId`가 변경될 때 데이터 로드\r\nwatch(\r\n  () => props.uniqueId,\r\n  async (newVal) => {\r\n    if (newVal) {\r\n      console.log(\"🛠 다이얼로그 전환, 기존 데이터 초기화\");\r\n\r\n      // ✅ 기존 데이터 지우지 않고 새로운 데이터를 덮어씌우는 방식\r\n      await nextTick(); // ✅ Vue 반응형 업데이트 대기\r\n\r\n      let data = dropZoneStore.getProperty(newVal);\r\n      if (data && data.property) {\r\n        // ✅ `calculateDepth` 적용 후 깊은 복사하여 기존 데이터 유지\r\n        topologyData.value = JSON.parse(\r\n          JSON.stringify(calculateDepth(data.property))\r\n        );\r\n      }\r\n\r\n      console.log(\r\n        \"🔍 새롭게 설정된 topologyData:\",\r\n        JSON.stringify(topologyData.value)\r\n      );\r\n    }\r\n  },\r\n  { immediate: true, deep: false }\r\n);\r\n\r\n// ✅ `values` 배열 내에 \"name\" 속성이 존재하는지 확인하는 함수\r\nconst hasNamedValues = (values) => {\r\n  return (\r\n    Array.isArray(values) &&\r\n    values.length > 0 &&\r\n    values.some(\r\n      (val) =>\r\n        val.name && typeof val.name === \"string\" && val.name.trim() !== \"\"\r\n    )\r\n  );\r\n};\r\n\r\n// ✅ `modelValue` 변경 시 다이얼로그 상태 업데이트\r\nwatch(\r\n  () => props.modelValue,\r\n  (newVal) => {\r\n    dialog.value = newVal;\r\n  }\r\n);\r\n\r\n// ✅ 다이얼로그 닫기\r\nconst closeDialog = () => {\r\n  emit(\"update:modelValue\", false);\r\n\r\n  // ✅ 완전 초기화\r\n  topologyData.value = [];\r\n};\r\n\r\nconst isSimpleArray = (values) => {\r\n  return Array.isArray(values) && values.length > 0 && !values[0].name;\r\n};\r\n\r\nwatch(\r\n  () => dropZoneStore.dropZones,\r\n  (newData) => {\r\n    if (newData.length > 0) {\r\n      dropZones.value = JSON.parse(JSON.stringify(newData)); // ✅ 깊은 복사하여 반응형 데이터 설정\r\n    }\r\n  },\r\n  { deep: true, immediate: true }\r\n);\r\n\r\n// ✅ 저장 함수 (costs 제거 후 기존 데이터 유지)\r\nconst save = async () => {\r\n  const targetZoneIndex = dropZones.value.findIndex((zone) =>\r\n    zone.items.some((subItem) => subItem.uniqueId === props.uniqueId)\r\n  );\r\n\r\n  if (targetZoneIndex === -1) {\r\n    console.error(\"❌ 해당 uniqueId를 가진 Zone을 찾을 수 없음\");\r\n    return;\r\n  }\r\n\r\n  const targetItemIndex = dropZones.value[targetZoneIndex].items.findIndex(\r\n    (subItem) => subItem.uniqueId === props.uniqueId\r\n  );\r\n\r\n  if (targetItemIndex === -1) {\r\n    console.error(\"❌ 해당 uniqueId를 가진 Item을 찾을 수 없음\");\r\n    return;\r\n  }\r\n\r\n  // ✅ 기존 데이터 유지 (깊은 복사)\r\n  const targetItem = JSON.parse(\r\n    JSON.stringify(dropZones.value[targetZoneIndex].items[targetItemIndex])\r\n  );\r\n\r\n  // ✅ 기존 property 데이터에서 변경된 데이터 적용\r\n  const updatedProperty = topologyData.value.map((prop) => {\r\n    if (prop.name === \"배전망 건설 단가\" || prop.name === \"발전소 구축단가\") {\r\n      const filteredCosts = getFilteredConstructionCosts(prop);\r\n\r\n      return {\r\n        name: prop.name,\r\n        values:\r\n          filteredCosts.length > 0\r\n            ? [\r\n                {\r\n                  constructionType:\r\n                    prop.name === \"배전망 건설 단가\"\r\n                      ? expansionType.value\r\n                      : solarConstructionType.value,\r\n                  ...(prop.name === \"배전망 건설 단가\" && {\r\n                    powerType: powerType.value,\r\n                  }),\r\n                  costs: filteredCosts.map((cost) => ({\r\n                    name: cost.name || \"이름 없음\",\r\n                    data: Number(cost.data) || 0,\r\n                    unit: cost.unit || \"\",\r\n                    modify: cost.modify ?? true,\r\n                  })),\r\n                },\r\n              ]\r\n            : [],\r\n      };\r\n    }\r\n\r\n    return {\r\n      name: prop.name,\r\n      values: prop.values.map((val, index, array) => ({\r\n        ...(array.length > 1 ? { name: val.name || prop.name } : {}),\r\n        data: Number(val.data) ?? 0,\r\n        unit: val.unit || \"\",\r\n        modify: val.modify ?? true,\r\n      })),\r\n    };\r\n  });\r\n\r\n  // ✅ depth 제거\r\n  updatedProperty.forEach((prop) => {\r\n    delete prop.depth;\r\n    if (prop.values) {\r\n      prop.values.forEach((val) => {\r\n        delete val.depth;\r\n      });\r\n    }\r\n  });\r\n\r\n  // ✅ 현재 아이템에 반영\r\n  targetItem.property = updatedProperty;\r\n\r\n  const sharedPropNames = [\"송전 접속단가\", \"송전 손실단가\"];\r\n  const sharedProps = updatedProperty.filter((prop) =>\r\n    sharedPropNames.includes(prop.name)\r\n  );\r\n  const originalProperty =\r\n    dropZones.value[targetZoneIndex].items[targetItemIndex].property;\r\n\r\n  if (String(targetItem.label).includes(\"154\")) {\r\n    // ✅ 모든 154 아이템에 속성 업데이트\r\n    dropZones.value.forEach((zone) => {\r\n      zone.items.forEach((item) => {\r\n        if (String(item.label).includes(\"154\")) {\r\n          if (item.uniqueId === props.uniqueId) {\r\n            item.property = JSON.parse(JSON.stringify(updatedProperty));\r\n          } else {\r\n            const newProperty = item.property.map((prop) => {\r\n              const matched = sharedProps.find((p) => p.name === prop.name);\r\n              return matched ? JSON.parse(JSON.stringify(matched)) : prop;\r\n            });\r\n            item.property = newProperty;\r\n          }\r\n          item.setProperty = true;\r\n        }\r\n      });\r\n    });\r\n  } else {\r\n    // ✅ 154가 아닌 아이템은 무조건 현재 item 저장\r\n    const hasChanges =\r\n      JSON.stringify(updatedProperty) !== JSON.stringify(originalProperty);\r\n\r\n    if (hasChanges) {\r\n      dropZones.value[targetZoneIndex].items[targetItemIndex].property =\r\n        JSON.parse(JSON.stringify(updatedProperty));\r\n      dropZones.value[targetZoneIndex].items[\r\n        targetItemIndex\r\n      ].setProperty = true;\r\n    } else {\r\n      // ✅ 값이 안 바뀌었어도 무조건 setProperty true\r\n      dropZones.value[targetZoneIndex].items[targetItemIndex].property =\r\n        JSON.parse(JSON.stringify(updatedProperty));\r\n      dropZones.value[targetZoneIndex].items[\r\n        targetItemIndex\r\n      ].setProperty = true;\r\n    }\r\n  }\r\n\r\n  // ✅ dropZoneStore를 갱신 (깊은 복사)\r\n  dropZoneStore.dropZones = JSON.parse(JSON.stringify(dropZones.value));\r\n  updateTopologyListProperty(targetItem);\r\n\r\n  emit(\"saveData\", JSON.parse(JSON.stringify(dropZones.value)));\r\n\r\n  await nextTick(); // ✅ UI 업데이트 대기 후 반영\r\n  closeDialog();\r\n};\r\n\r\nconst updateTopologyListProperty = (updatedItem) => {\r\n  // topologyList는 이차원 배열이므로 중첩 루프 필요\r\n  for (const zone of topologyStore.topologyList) {\r\n    for (const item of zone) {\r\n      if (item.uniqueId === updatedItem.uniqueId) {\r\n        item.property = JSON.parse(JSON.stringify(updatedItem.property));\r\n        item.setProperty = true;\r\n        console.log(\"바뀜\");\r\n        return; // 찾으면 바로 종료\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst calculateDepth = (data, depth = 1) => {\r\n  return data.map((item) => {\r\n    let newItem = {\r\n      ...JSON.parse(JSON.stringify(item)), // 깊은 복사\r\n      depth,\r\n    };\r\n\r\n    // ✅ values가 배열인지 확인하고 깊은 복사\r\n    if (Array.isArray(newItem.values)) {\r\n      newItem.values = newItem.values.map((val) => {\r\n        let newVal = {\r\n          ...JSON.parse(JSON.stringify(val)),\r\n          depth: depth + 1, // ✅ values의 depth 증가\r\n        };\r\n\r\n        // ✅ values 내에 `costs` 배열이 존재하면 추가 depth 증가\r\n        if (Array.isArray(newVal.costs)) {\r\n          newVal.costs = newVal.costs.map((cost) => ({\r\n            ...JSON.parse(JSON.stringify(cost)),\r\n            depth: newVal.depth + 1, // ✅ `costs`는 values의 depth보다 1 더 깊음\r\n          }));\r\n        }\r\n\r\n        return newVal;\r\n      });\r\n    } else {\r\n      newItem.values = [];\r\n    }\r\n\r\n    return newItem;\r\n  });\r\n};\r\n\r\n// ✅ 배전망 또는 태양광 데이터인지 확인하는 함수 (🚀 NEW 추가)\r\nconst isConstructionCost = (item) => {\r\n  return item.name === \"배전망 건설 단가\" || item.name === \"발전소 구축단가\";\r\n};\r\n\r\n// ✅ 필터링된 건설 단가 데이터 반환 (🚀 229 + 태양광 둘 다 처리)\r\nconst getFilteredConstructionCosts = (item) => {\r\n  if (!item || !item.values) return [];\r\n\r\n  if (item.name === \"배전망 건설 단가\") {\r\n    return (\r\n      item.values.find(\r\n        (cost) =>\r\n          cost.constructionType === expansionType.value &&\r\n          cost.powerType === powerType.value\r\n      )?.costs || []\r\n    );\r\n  }\r\n\r\n  if (item.name === \"발전소 구축단가\") {\r\n    return (\r\n      item.values.find(\r\n        (cost) => cost.constructionType === solarConstructionType.value\r\n      )?.costs || []\r\n    );\r\n  }\r\n\r\n  return [];\r\n};\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n.dialog-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding: 12px;\r\n}\r\n\r\n.dialog-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding: 12px;\r\n  color: white;\r\n  background-color: #1b67ca;\r\n  border-radius: 6px 6px 0 0;\r\n}\r\n\r\n/* ✅ 테이블 스타일 */\r\n.styled-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n/* ✅ 테이블 헤더 스타일 */\r\nth {\r\n  background-color: #ececec !important;\r\n  font-weight: bold !important;\r\n  padding: 10px;\r\n  text-align: center !important;\r\n}\r\n\r\n/* ✅ Depth-1 Bold 적용 */\r\n.td-item.depth-1,\r\nth.depth-1 {\r\n  font-weight: bold;\r\n  background-color: #f8f9fc;\r\n}\r\n\r\n/* ✅ Depth-2, Depth-3 들여쓰기 적용 */\r\n.td-item {\r\n  &.depth-2 {\r\n    padding-left: 20px;\r\n    font-weight: normal;\r\n  }\r\n  &.depth-3 {\r\n    padding-left: 32px;\r\n    font-weight: lighter;\r\n  }\r\n}\r\n\r\n/* ✅ 입력 필드 스타일 */\r\n.input-field {\r\n  width: 80%;\r\n  min-width: 100px;\r\n  height: 36px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  padding: 0 10px;\r\n  margin: 0 auto;\r\n  border: none;\r\n  border-bottom: 1px solid #ccc;\r\n  background: transparent;\r\n  transition: border-color 0.2s ease-in-out;\r\n\r\n  &:focus-within {\r\n    border-bottom: 2px solid #004c99 !important;\r\n  }\r\n\r\n  /* ✅ Vuetify 기본 스타일 제거 */\r\n  ::v-deep(.v-input__control) {\r\n    border: none !important;\r\n    box-shadow: none !important;\r\n    background: none !important;\r\n    min-height: 36px;\r\n    padding: 0;\r\n  }\r\n\r\n  ::v-deep(.v-input__control input) {\r\n    text-align: center; /* ✅ 입력 값 가운데 정렬 */\r\n    padding: 0;\r\n    border: none !important;\r\n    background: none !important;\r\n    outline: none;\r\n    box-shadow: none;\r\n    font-weight: bold;\r\n    color: #333;\r\n  }\r\n}\r\n\r\n::v-deep(.v-selection-control-group) {\r\n  flex-direction: unset !important;\r\n  justify-content: flex-start !important;\r\n  align-items: center !important;\r\n  width: 30% !important;\r\n}\r\n\r\n.td-value {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n}\r\n</style>","import script from \"./GlobalDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GlobalDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GlobalDialog.vue?vue&type=style&index=0&id=28a52140&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28a52140\"]])\n\nexport default __exports__","export const buildTime = \"2025. 4. 21. 오후 3:13:44\";\n","<template>\n  <div class=\"app\">\n    <SideBar />\n    <router-view v-slot=\"{ Component }\" @openDialog=\"openDialog\">\n      <component :is=\"Component\" v-if=\"Component\" />\n    </router-view>\n    <GlobalDialog\n      v-model=\"dialog\"\n      :id=\"dialogId\"\n      :uniqueId=\"dialogUniqueId\"\n      :label=\"dialogLabel\"\n      @saveData=\"handleSave\"\n      @update:modelValue=\"closeDialog\"\n    />\n  </div>\n</template>\n\n<script setup>\n// 컴포넌트 or 페이지 불러오기\nimport SideBar from \"./components/SideBar.vue\";\nimport { ref } from \"vue\";\n\nimport GlobalDialog from \"@/components/GlobalDialog.vue\"; // 전역 다이얼로그 컴포넌트\nimport { buildTime } from './build-time';\n\nconsole.log(`[Build Info] 이 앱은 ${buildTime}에 빌드되었습니다! 🚀`);\n\nconst dialog = ref(false);\nconst dialogId = ref(\"\");\nconst dialogUniqueId = ref(\"\");\nconst dialogLabel = ref(\"\");\n\n\n\nconst openDialog = (id, uniqueId, label) => {\n  dialogId.value = id;\n  dialogUniqueId.value = uniqueId;\n  dialogLabel.value = label;\n  dialog.value = true;\n};\n\nconst closeDialog = () => {\n  console.log(\"🔸 다이얼로그 닫기 및 데이터 초기화\");\n  dialog.value = false;\n  dialogId.value = \"\";\n  dialogUniqueId.value = \"\"; // ✅ uniqueId 초기화\n  dialogLabel.value = \"\";\n};\n\n\nconst handleSave = (data) => {\n  console.log('데이터 저장 완료', data);\n};\n\nconsole.log('마지막 업데이트 : ', '2025-04-21 04-21');\n\n</script>\n\n\n<style lang=\"sass\">\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","// Pinia에 글로벌 데이터 저장\r\n\r\nimport { defineStore } from 'pinia';\r\nimport { ref } from 'vue';\r\n\r\nexport const useItemStore = defineStore('itemStore', () => {\r\n  const transStore = ref([\r\n    { label: \"원전\", id: 1, setProperty: true },\r\n    { label: \"석탄화력\", id: 1, setProperty: true },\r\n    { label: \"가스복합\", id: 1, setProperty: true },\r\n    { label: \"소수력\", id: 1, setProperty: true },\r\n  ]);\r\n\r\n  const distribStore = ref([\r\n    {\r\n      label: \"765\",\r\n      id: 2,\r\n      property: [\r\n        {\r\n          name: \"수요용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: false }]\r\n        },\r\n        {\r\n          name: \"송전설로 건설단가\",\r\n          values: [{ data: 5700, unit: \"백만원/km\", modify: true }]\r\n        },\r\n        {\r\n          name: \"여유용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: true }]\r\n        },\r\n        {\r\n          name: \"최대 수용 용량\",\r\n          values: [{ data: 13, unit: \"MW\", modify: true }]\r\n        },\r\n      ],\r\n      setProperty: false,\r\n    },\r\n    {\r\n      label: \"345\",\r\n      id: 3,\r\n      property: [\r\n        {\r\n          name: \"수요용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: false }]\r\n        },\r\n        {\r\n          name: \"송전설로 건설단가\",\r\n          values: [{ data: 2060, unit: \"백만원/km\", modify: true }]\r\n        },\r\n        {\r\n          name: \"여유용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: true }]\r\n        },\r\n        {\r\n          name: \"최대 수용 용량\",\r\n          values: [{ data: 13, unit: \"MW\", modify: true }]\r\n        },\r\n      ],\r\n      setProperty: false,\r\n    },\r\n    {\r\n      label: \"154\",\r\n      id: 4,\r\n      property: [\r\n        {\r\n          name: \"수요용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: false }]\r\n        },\r\n        {\r\n          name: \"송전설로 건설단가\",\r\n          values: [{ data: 102, unit: \"백만원/km\", modify: true }]\r\n        },\r\n        {\r\n          name: \"송전 접속단가\",\r\n          values: [\r\n            { name: \"기본 단가\", data: 667.61, unit: \"원/kW\", modify: true },\r\n            { name: \"사용 단가\", data: 1.42, unit: \"원/kWh\", modify: true }\r\n          ]\r\n        },\r\n        {\r\n          name: \"송전 손실단가\",\r\n          values: [\r\n            { name: \"원전\", data: 0.03, unit: \"원/MWh\", modify: true },\r\n            { name: \"석탄화력\", data: 0.03, unit: \"원/MWh\", modify: true },\r\n            { name: \"가스복합\", data: -1.39, unit: \"원/MWh\", modify: true },\r\n            { name: \"소수력\", data: 0, unit: \"원/MWh\", modify: true }\r\n          ]\r\n        }\r\n      ],\r\n      setProperty: false,\r\n    },\r\n    {\r\n      label: \"22.9\",\r\n      id: 5,\r\n      property: [\r\n        {\r\n          name: \"수요용량\",\r\n          values: [{ data: 30, unit: \"MW\", modify: false }]\r\n        },\r\n        {\r\n          name: \"여유용량\",\r\n          values: [{ data: 0, unit: \"MW\", modify: true }]\r\n        },\r\n        {\r\n          name: \"최대 수용 용량\",\r\n          values: [{ data: 13, unit: \"MW\", modify: true }]\r\n        },\r\n        {\r\n          name: \"배전망 건설 단가\",\r\n          values: [\r\n            {\r\n              constructionType: \"증축\",\r\n              powerType: \"AC\",\r\n              costs: [\r\n                { name: \"배전 선로 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"전주 공사 단가\", data: 0, unit: \"만원/km\", modify: true },\r\n                { name: \"선로 토체 단가\", data: 1500, unit: \"만원/km\", modify: true },\r\n                { name: \"변압기 단가\", data: 1000, unit: \"만원/km\", modify: true },\r\n                { name: \"차단기 단가\", data: 500, unit: \"만원/km\", modify: true },\r\n                { name: \"토목 건설 단가\", data: 0, unit: \"만원/km\", modify: true },\r\n                { name: \"운용 비용 단가\", data: 0, unit: \"만원/km\", modify: true },\r\n                { name: \"부대 비용 단가\", data: 1000, unit: \"만원/km\", modify: true }\r\n              ]\r\n            },\r\n            {\r\n              constructionType: \"신축\",\r\n              powerType: \"AC\",\r\n              costs: [\r\n                { name: \"배전 선로 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"전주 공사 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"선로 토체 단가\", data: 1500, unit: \"만원/km\", modify: true },\r\n                { name: \"변압기 단가\", data: 1000, unit: \"만원/km\", modify: true },\r\n                { name: \"차단기 단가\", data: 500, unit: \"만원/km\", modify: true },\r\n                { name: \"토목 건설 단가\", data: 1500, unit: \"만원/km\", modify: true },\r\n                { name: \"운용 비용 단가\", data: 1000, unit: \"만원/km\", modify: true },\r\n                { name: \"부대 비용 단가\", data: 1000, unit: \"만원/km\", modify: true }\r\n              ]\r\n            },\r\n            {\r\n              constructionType: \"증축\",\r\n              powerType: \"DC\",\r\n              costs: [\r\n                { name: \"배전 선로 단가\", data: 4000, unit: \"만원/km\", modify: true },\r\n                { name: \"전주 공사 단가\", data: 0, unit: \"만원/km\", modify: true },\r\n                { name: \"선로 토체 단가\", data: 2500, unit: \"만원/km\", modify: true },\r\n                { name: \"변압기 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"차단기 단가\", data: 1000, unit: \"만원/km\", modify: true },\r\n                { name: \"토목 건설 단가\", data: 0, unit: \"만원/km\", modify: true },\r\n                { name: \"운용 비용 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"부대 비용 단가\", data: 2000, unit: \"만원/km\", modify: true }\r\n              ]\r\n            },\r\n            {\r\n              constructionType: \"신축\",\r\n              powerType: \"DC\",\r\n              costs: [\r\n                { name: \"배전 선로 단가\", data: 4000, unit: \"만원/km\", modify: true },\r\n                { name: \"전주 공사 단가\", data: 3000, unit: \"만원/km\", modify: true },\r\n                { name: \"선로 토체 단가\", data: 2500, unit: \"만원/km\", modify: true },\r\n                { name: \"변압기 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"차단기 단가\", data: 1000, unit: \"만원/km\", modify: true },\r\n                { name: \"토목 건설 단가\", data: 3000, unit: \"만원/km\", modify: true },\r\n                { name: \"운용 비용 단가\", data: 2000, unit: \"만원/km\", modify: true },\r\n                { name: \"부대 비용 단가\", data: 2000, unit: \"만원/km\", modify: true }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      setProperty: false,\r\n    }\r\n  ]);\r\n\r\n  const nwasStore = ref([\r\n    {\r\n      label: \"태양광\", id: 7,\r\n      property: [{\r\n        name: \"수요용량\",\r\n        values: [{ data: 0, unit: 'MW', modify: false }]\r\n      },\r\n      {\r\n        name: \"계통 유연계수\",\r\n        values: [{ data: 0, unit: \"(0.00~0.10)\", modify: true }]\r\n      },\r\n      {\r\n        name: \"여유 용량\",\r\n        values: [{ data: 0, unit: \"MW\", modify: true }]\r\n      },\r\n      {\r\n        name: '발전소 구축단가',\r\n        values: [\r\n          {\r\n            constructionType: \"신축\",\r\n            costs: [\r\n              { name: \"건설단가\", data: 1418, unit: \"천원/kW\", modify: true },\r\n              { name: \"유지비용\", data: 75, unit: \"천원/kW\", modify: true },\r\n              { name: \"태양광 거래 단가 (SMP)\", data: 149, unit: \"천원/kWh\", modify: true },\r\n              { name: \"접속비용\", data: 150, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n          {\r\n            constructionType: \"기존\",\r\n            costs: [\r\n              { name: \"유지비용\", data: 75, unit: \"천원/kW\", modify: true },\r\n              { name: \"태양광 거래 단가 (SMP)\", data: 149, unit: \"천원/kWh\", modify: true },\r\n              { name: \"접속비용\", data: 150, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      ],\r\n      setProperty: false,\r\n    },\r\n    {\r\n      label: \"풍력\", id: 7,\r\n      property: [{\r\n        name: \"수요용량\",\r\n        values: [{ data: 0, unit: 'MW', modify: false }]\r\n      },\r\n      {\r\n        name: \"계통 유연계수\",\r\n        values: [{ data: 0, unit: \"(0.00~0.10)\", modify: true }]\r\n      },\r\n      {\r\n        name: \"여유 용량\",\r\n        values: [{ data: 0, unit: \"MW\", modify: true }]\r\n      }, \r\n      {\r\n        name: '발전소 구축단가',\r\n        values: [\r\n          {\r\n            constructionType: \"신축\",\r\n            costs: [\r\n              { name: \"기자재 및 공사비\", data: 2000, unit: \"천원/kW\", modify: true },\r\n              { name: \"인허가/설계감리\", data: 150, unit: \"천원/kW\", modify: true },\r\n              { name: \"기타 부대비\", data: 150, unit: \"천원/kWh\", modify: true },\r\n              { name: \"유지비용\", data: 30, unit: \"천원/kW\", modify: true },\r\n              { name: \"풍력 거래 단가\", data: 138, unit: \"천원/kW\", modify: true },\r\n              { name: \"접속비용\", data: 200, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n          {\r\n            constructionType: \"기존\",\r\n            costs: [\r\n              { name: \"유지비용\", data: 30, unit: \"천원/kW\", modify: true },\r\n              { name: \"풍력 거래 단가\", data: 138, unit: \"천원/kWh\", modify: true },\r\n              { name: \"접속비용\", data: 200, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      ],\r\n      setProperty: false,\r\n    },\r\n    { label: \"해상풍력\", id: 7,\r\n      property: [{\r\n        name: \"수요용량\",\r\n        values: [{ data: 0, unit: 'MW', modify: false }]\r\n      },\r\n      {\r\n        name: \"계통 유연계수\",\r\n        values: [{ data: 0, unit: \"(0.00~0.10)\", modify: true }]\r\n      },\r\n      {\r\n        name: \"여유 용량\",\r\n        values: [{ data: 0, unit: \"MW\", modify: true }]\r\n      }, \r\n      {\r\n        name: '발전소 구축단가',\r\n        values: [\r\n          {\r\n            constructionType: \"신축\",\r\n            costs: [\r\n              { name: \"기자재 및 공사비\", data: 2928, unit: \"천원/kW\", modify: true },\r\n              { name: \"인허가/설계감리\", data: 732, unit: \"천원/kW\", modify: true },\r\n              { name: \"기타 부대비\", data: 731, unit: \"천원/kWh\", modify: true },\r\n              { name: \"유지비용\", data: 194, unit: \"천원/kW\", modify: true },\r\n              { name: \"풍력 거래 단가\", data: 138, unit: \"천원/kW\", modify: true },\r\n              { name: \"접속비용\", data: 791, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n          {\r\n            constructionType: \"기존\",\r\n            costs: [\r\n              { name: \"유지비용\", data: 194, unit: \"천원/kW\", modify: true },\r\n              { name: \"풍력 거래 단가\", data: 138, unit: \"천원/kWh\", modify: true },\r\n              { name: \"접속비용\", data: 791, unit: \"천원/kW\", modify: true },\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      ],\r\n      setProperty: false,\r\n     },\r\n    { label: \"EV\", id: 7 },\r\n    { label: \"EVC\", id: 7 },\r\n    { label: \"ESS\", id: 7 },\r\n    { label: \"DR\", id: 7 },\r\n    { label: \"VPP\", id: 7 },\r\n\r\n  ]);\r\n\r\n  return { transStore, distribStore, nwasStore }\r\n});","<template>\r\n  <div class=\"step_container\">\r\n    <div class=\"itemsArea\">\r\n      <v-row>\r\n        <v-col>\r\n          <v-card class=\"demandArea\">\r\n            <v-card-title>수요지역</v-card-title>\r\n            <v-card-text>\r\n              <v-text-field\r\n                label=\"주소 검색\"\r\n                variant=\"outlined\"\r\n                v-model=\"demandArea\"\r\n                placeholder=\"주소를 검색하세요\"\r\n                readonly\r\n                prepend-inner-icon=\"mdi-magnify\"\r\n                @click=\"openPostcode\"\r\n                color=\"primary\"\r\n                class=\"mb-3\"\r\n                hide-details\r\n              />\r\n\r\n              <v-text-field\r\n                label=\"용량\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                v-model=\"electricCapacity\"\r\n                prepend-inner-icon=\"mdi-lightning-bolt\"\r\n                color=\"primary\"\r\n                class=\"mb-3\"\r\n                hide-details\r\n              >\r\n                <template #append-inner>\r\n                  <span class=\"text-subtitle-2 pr-2\">MW</span>\r\n                </template>\r\n              </v-text-field>\r\n\r\n              <v-text-field\r\n                label=\"일별 전력 사용시간\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                v-model=\"hoursPerDay\"\r\n                prepend-inner-icon=\"mdi-hours-24\"\r\n                color=\"primary\"\r\n                @update:model-value = 'validateHoursPerDay'\r\n              >\r\n                <template #append-inner>\r\n                  <span class=\"text-subtitle-2 pr-2\">hr/day</span>\r\n                </template>\r\n              </v-text-field>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row>\r\n        <v-col>\r\n          <v-card>\r\n            <v-card-title>송배전망</v-card-title>\r\n            <div class=\"buttons\">\r\n              <v-btn\r\n                class=\"round Item\"\r\n                v-for=\"btn in transStore\"\r\n                :key=\"btn.id\"\r\n                draggable=\"true\"\r\n                @dragstart=\"startDrag($event, btn)\"\r\n              >\r\n                {{ btn.label }}\r\n              </v-btn>\r\n            </div>\r\n            <v-divider></v-divider>\r\n            <div class=\"buttons\">\r\n              <v-btn\r\n                class=\"round Item\"\r\n                v-for=\"btn in distribStore\"\r\n                :key=\"btn.id\"\r\n                draggable=\"true\"\r\n                @dragstart=\"startDrag($event, btn)\"\r\n              >\r\n                {{ btn.label }}\r\n              </v-btn>\r\n            </div>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row>\r\n        <v-col>\r\n          <v-card>\r\n            <v-card-title>NWAs</v-card-title>\r\n            <div class=\"buttons nwas\">\r\n              <v-btn\r\n                class=\"round Item\"\r\n                v-for=\"btn in nwasStore\"\r\n                :key=\"btn.id\"\r\n                draggable=\"true\"\r\n                @dragstart=\"startDrag($event, btn)\"\r\n              >\r\n                {{ btn.label }}\r\n              </v-btn>\r\n            </div>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-row>\r\n        <v-col>\r\n          <v-card class=\"cntTopology\">\r\n            <v-card-title>Topology</v-card-title>\r\n            <v-card-text class=\"mt-3\">\r\n              <p class=\"text-body-1\">\r\n                <strong>최대구성 :</strong> {{ maxTopology }} 개\r\n              </p>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n\r\n    <div class=\"arrangeArea\">\r\n      <div class=\"drop-zones\">\r\n        <div\r\n          v-for=\"zone in dropZones\"\r\n          :key=\"zone.id\"\r\n          class=\"drop-zone\"\r\n          :class=\"{ 'invalid-zone': !zone.isValid }\"\r\n          @dragover=\"onDragOver($event, zone.id)\"\r\n          @dragleave=\"resetZoneColors\"\r\n          @drop=\"onDrop($event, zone.id)\"\r\n        >\r\n          <h3>{{ zone.name }}</h3>\r\n          <ul class=\"list-unstyled m-0 p-0\">\r\n            <li v-for=\"item in zone.items\" :key=\"item.id\">\r\n              <div\r\n                class=\"round Item\"\r\n                @contextmenu.prevent=\"removeItem(zone.id, item.uniqueId)\"\r\n              >\r\n                <div\r\n                  class=\"header\"\r\n                  :class=\"{ 'blue-header': item.setProperty }\"\r\n                >\r\n                  {{ item.label }}\r\n                </div>\r\n\r\n                <div class=\"content\">\r\n                  <button\r\n                    class=\"childButton\"\r\n                    :class=\"{ 'gray-button': item.id === 1 }\"\r\n                    @click=\"openDialog(item.id, item.uniqueId, item.label)\"\r\n                  >\r\n                    세부설정\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"step-controls\">\r\n        <v-btn class=\"step-button\" @click=\"goToNextStep\"> 확인 </v-btn>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <v-dialog v-model=\"showDialog\" max-width=\"400px\">\r\n    <v-card>\r\n      <v-card-title> 경고 </v-card-title>\r\n      <v-card-text> {{ dialogText }} </v-card-text>\r\n      <v-card-actions>\r\n        <v-btn color=\"primary\" @click=\"showDialog = false\">닫기</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, watch, defineEmits } from \"vue\";\r\nimport { useDropZoneStore } from \"../store/dropZoneStore.js\";\r\nimport { useItemStore } from \"../store/itemStore.js\";\r\nimport { useProgressStore } from \"../store/progressStore.js\";\r\nimport { useTopologyStore } from \"../store/topologyStore.js\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst store = useDropZoneStore();\r\nconst topologyStore = useTopologyStore();\r\n\r\nconst { dropZones } = storeToRefs(store);\r\n\r\nconst itemStore = useItemStore();\r\nconst { transStore } = storeToRefs(itemStore);\r\nconst { distribStore } = storeToRefs(itemStore);\r\nconst { nwasStore } = storeToRefs(itemStore);\r\n\r\nconst startItem = ref(null);\r\nconst maxTopology = ref(0);\r\n\r\nconst progressStore = useProgressStore();\r\nconst router = useRouter();\r\nconst demandArea = ref(\"\");\r\nconst electricCapacity = ref(\"\");\r\nconst hoursPerDay = ref(\"\");\r\n\r\nvar dialogText = ref(\"\");\r\nconst showDialog = ref(false);\r\n\r\nconst emit = defineEmits([\"openDialog\"]);\r\n\r\nconst openDialog = (id, uniqueId, label) => {\r\n  emit(\"openDialog\", id, uniqueId, label);\r\n};\r\n\r\n// 주소검색\r\nconst openPostcode = () => {\r\n  new window.daum.Postcode({\r\n    oncomplete: function (data) {\r\n      demandArea.value = data.address;\r\n    },\r\n  }).open();\r\n};\r\n\r\n// 드래그 시작 시 실행\r\nconst startDrag = (event, item) => {\r\n  event.dataTransfer.effectAllowed = \"move\";\r\n  event.dataTransfer.setData(\"draggedItem\", JSON.stringify(item));\r\n  startItem.value = item;\r\n};\r\n\r\n// 아이템 배치완료\r\nconst onDrop = (event, zoneId) => {\r\n  const draggedItem = JSON.parse(event.dataTransfer.getData(\"draggedItem\"));\r\n\r\n  store.addItemToZone(zoneId, draggedItem);\r\n  resetZoneColors();\r\n  startItem.value = null;\r\n};\r\n\r\n// 해당 열 확인\r\nconst onDragOver = (event, zoneId) => {\r\n  event.preventDefault();\r\n\r\n  if (!startItem.value) return;\r\n\r\n  const isValid = zoneId === startItem.value.id;\r\n\r\n  event.dataTransfer.dropEffect = isValid ? \"move\" : \"none\";\r\n\r\n  dropZones.value.forEach((zone) => {\r\n    zone.isValid = zone.id === startItem.value.id;\r\n  });\r\n};\r\n\r\nconst resetZoneColors = () => {\r\n  dropZones.value.forEach((zone) => (zone.isValid = true));\r\n};\r\n\r\nfunction validateHoursPerDay(value){\r\n  if (value > 24){\r\n    dialogText = \"일별 전력 사용시간은 최대 24시간까지 입력가능합니다.\";\r\n    showDialog.value = true;\r\n    hoursPerDay.value = ref('')\r\n  }\r\n}\r\n\r\n// 두 값이 모두 입력되면 zone6에 자동 저장\r\nwatch(\r\n  [demandArea, electricCapacity, hoursPerDay],\r\n  ([newAddress, newCapacity, newHoursPerDay]) => {\r\n    if (newAddress && newCapacity && newHoursPerDay) {\r\n      store.saveDemandArea(newAddress, newCapacity, newHoursPerDay);\r\n    }\r\n  }\r\n);\r\n\r\n// 모든 dropzone에 하나 이상의 값이 저장되었을 때\r\nwatch(\r\n  dropZones,\r\n  (newZones) => {\r\n    //  765(Zone ID: 2)를 제외한 모든 Zone이 비어있지 않은지 확인\r\n    const relevantZones = newZones.filter((zone) => zone.id !== 2);\r\n\r\n    const allFilled = relevantZones.every((zone) => zone.items.length > 0);\r\n\r\n    if (allFilled) {\r\n      //  maxTopology = (765 포함) 모든 zone의 items 개수 곱하기\r\n      maxTopology.value = newZones.reduce(\r\n        (product, zone) => product * (zone.items.length || 1), //  비어있는 zone은 1로 처리\r\n        1\r\n      );\r\n    } else {\r\n      maxTopology.value = 0;\r\n    }\r\n  },\r\n  { deep: true, immediate: true }\r\n);\r\n\r\nconst removeItem = (zoneId, uniqueId) => {\r\n  store.removeItemFromZone(zoneId, uniqueId);\r\n  topologyStore.clearTopologyList();\r\n};\r\n\r\n// 완료 조건 함수\r\nconst isStep1Completed = () => {\r\n  // 1. DropZoneStore에서 수요지역 데이터 가져오기 (ID 6)\r\n  const demandZone = dropZones.value.find((zone) => zone.id === 6);\r\n  const hasDemandData = demandZone?.items?.length > 0; // 안전한 데이터 접근 방식\r\n\r\n  if (!hasDemandData) {\r\n    dialogText = \"수요지역 위치와 용량을 입력하세요.\";\r\n    showDialog.value = true;\r\n    return false;\r\n  }\r\n\r\n  // 2. 765를 제외한 모든 dropZone이 비어있지 않은지 확인\r\n  const relevantZones = dropZones.value.filter((zone) => zone.id !== 2);\r\n  const allFilled = relevantZones.every((zone) => zone.items.length > 0);\r\n\r\n  if (!allFilled) {\r\n    dialogText = \"모든 DropZone에 아이템을 배치해야 합니다. (765 제외)\";\r\n    showDialog.value = true;\r\n    return false;\r\n  }\r\n\r\n  return true; // 모든 조건을 충족하면 true 반환\r\n};\r\n\r\n// \"다음\" 버튼 클릭 시 완료 검사 + 이동\r\nconst goToNextStep = () => {\r\n  if (isStep1Completed()) {\r\n    // 완료 조건 검사\r\n    progressStore.setStepCondition(\"step1\", true); // Step1 완료 상태 저장\r\n    router.push(\"/step2\"); // Step2로 이동\r\n    console.log(\"step1 DropZones : \", JSON.stringify(dropZones.value));\r\n  } else {\r\n    progressStore.setStepCondition(\"step1\", false); // Step1 완료 상태 저장\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.step_container {\r\n  display: flex;\r\n}\r\n\r\n#daumLocation {\r\n  margin-left: 16px;\r\n  background: rgb(var(--dark-alt));\r\n  border: none;\r\n  border-radius: 2px;\r\n  padding: 4px 8px;\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n</style>","import script from \"./Step1View.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Step1View.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Step1View.vue?vue&type=style&index=0&id=15ea0126&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-15ea0126\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"step_container\">\r\n    <div class=\"listArea\">\r\n      <v-row>\r\n        <v-col class=\"topology\">\r\n          <v-card>\r\n            <v-card-title>Topology</v-card-title>\r\n\r\n            <v-card-text class=\"mt-3\">\r\n              <p class=\"text-body-1\">\r\n                <strong>최대구성 :</strong> {{ maxTopology }} 개\r\n              </p>\r\n\r\n              <p class=\"text-body-1\">\r\n                <strong>비교군 :</strong> {{ comparison }} 개\r\n              </p>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n\r\n        <v-col class=\"topologyList\">\r\n          <v-card>\r\n            <v-card-title class=\"d-flex justify-space-between align-center\">\r\n              TopologyList\r\n            </v-card-title>\r\n\r\n            <v-card-text class=\"text-body-1\">\r\n              <div v-if=\"topologyList.length > 0\">\r\n                <ul class=\"topology-ul\">\r\n                  <li\r\n                    v-for=\"(list, index) in topologyList\"\r\n                    :key=\"index\"\r\n                    class=\"topology-item\"\r\n                    draggable=\"true\"\r\n                    @dragstart=\"dragStart(index)\"\r\n                    @dragover.prevent\r\n                    @drop=\"dropItem(index)\"\r\n                  >\r\n                    <div class=\"topology-info\">\r\n                      <v-icon class=\"drag-handle\">mdi-drag</v-icon>\r\n                      <!-- 드래그 핸들 -->\r\n                      <span\r\n                        :style=\"{\r\n                          display: 'inline-block',\r\n                          padding: '3px 15px',\r\n                          marginRight: '10px',\r\n                          borderRadius: '5px',\r\n                          fontSize: '12px',\r\n                          fontWeight: 'bold',\r\n                          color: textColors[index % textColors.length],\r\n                          backgroundColor: colors[index % colors.length],\r\n                        }\"\r\n                        >List {{ index + 1 }}.\r\n                      </span>\r\n\r\n                      <!--  리스트 내부 노드 출력 -->\r\n\r\n                      <p\r\n                        v-for=\"(node, nodeIndex) in list || []\"\r\n                        :key=\"node.uniqueId || nodeIndex\"\r\n                      >\r\n                        {{ node.label }}\r\n                        <span v-if=\"nodeIndex < list.length - 1\"> > </span>\r\n                      </p>\r\n                    </div>\r\n\r\n                    <!--  리스트 삭제 버튼 -->\r\n                    <div class=\"topology-actions\">\r\n                      <v-btn color=\"red\" icon @click=\"deleteTopology(index)\">\r\n                        <v-icon size=\"xs\">mdi-delete</v-icon>\r\n                      </v-btn>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <p v-else class=\"text-body-1\">저장된 Topology가 없습니다.</p>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n\r\n    <div class=\"arrangeArea\">\r\n      <div class=\"title\">\r\n        <p class=\"guide-message\">\r\n          선택 영역 : <strong>{{ getNextZoneName() }}</strong>\r\n        </p>\r\n\r\n        <v-btn class=\"addList\" @click=\"addList\" color=\"primary\"> 추가 </v-btn>\r\n      </div>\r\n\r\n      <div class=\"drop-zones\">\r\n        <div\r\n          v-for=\"zone in dropZones\"\r\n          :key=\"zone.id\"\r\n          class=\"drop-zone\"\r\n          :data-id=\"zone.id\"\r\n          :class=\"{\r\n            'invalid-zone': !zone.isValid,\r\n            'active-zone': zone.id === nextZoneId, // 강조 표시\r\n          }\"\r\n        >\r\n          <h3>{{ zone.name }}</h3>\r\n\r\n          <ul class=\"list-unstyled m-0 p-0\">\r\n            <li v-for=\"item in zone.items\" :key=\"item.uniqueId || item.id\">\r\n              <div\r\n                class=\"round Item\"\r\n                ref=\"buttons\"\r\n                @click=\"connectButton($event, item.id, zone.id, item)\"\r\n                :class=\"{\r\n                  'next-clickable': zone.id === nextZoneId,\r\n                }\"\r\n              >\r\n                <div\r\n                  class=\"header\"\r\n                  :class=\"[\r\n                    { 'blue-header': item.setProperty },\r\n                    `header-${item.uniqueId}`, // ← 고유 클래스 추가\r\n                  ]\"\r\n                >\r\n                  {{ item.label }}\r\n                </div>\r\n                <div class=\"content\">\r\n                  <button\r\n                    class=\"childButton\"\r\n                    :class=\"{ 'gray-button': item.id === 1 }\"\r\n                    @click.stop=\"openDialog(item.id, item.uniqueId, item.label)\"\r\n                  >\r\n                    세부설정\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"step-controls\">\r\n        <v-btn class=\"step-button\" @click=\"goToNextStep\"> 확인 </v-btn>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- SVG 선 (버튼을 연결) -->\r\n\r\n    <svg class=\"connection-svg\">\r\n      <!-- 연결 중인 선 (실선) -->\r\n      <line\r\n        v-for=\"(line, index) in pendingLines\"\r\n        :key=\"'pending-' + index\"\r\n        :x1=\"line.x1\"\r\n        :y1=\"line.y1\"\r\n        :x2=\"line.x2\"\r\n        :y2=\"line.y2\"\r\n        stroke=\"black\"\r\n        stroke-width=\"2\"\r\n        stroke-dasharray=\"0\"\r\n      />\r\n      <!-- 완성된 선 (점선) -->\r\n      <line\r\n        v-for=\"(line, index) in completedLines\"\r\n        :key=\"'completed-' + index\"\r\n        :x1=\"line.x1\"\r\n        :y1=\"line.y1\"\r\n        :x2=\"line.x2\"\r\n        :y2=\"line.y2\"\r\n        stroke=\"black\"\r\n        stroke-width=\"2\"\r\n        stroke-dasharray=\"5,5\"\r\n      />\r\n    </svg>\r\n\r\n    <v-dialog v-model=\"showDialog\" max-width=\"400px\">\r\n      <v-card>\r\n        <v-card-title> 경고 </v-card-title>\r\n        <v-card-text> {{ dialogText }} </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"primary\" @click=\"showDialog = false\">닫기</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script setup>\r\nimport { useDropZoneStore } from \"../store/dropZoneStore.js\";\r\nimport { useTopologyStore } from \"../store/topologyStore.js\";\r\nimport { useProgressStore } from \"../store/progressStore.js\";\r\nimport { useRouter, onBeforeRouteLeave } from \"vue-router\";\r\n\r\nimport { storeToRefs } from \"pinia\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  onUnmounted,\r\n  computed,\r\n  defineEmits,\r\n  watch,\r\n  nextTick,\r\n} from \"vue\";\r\n\r\nconst store = useDropZoneStore();\r\nconst topologyStore = useTopologyStore();\r\nconst progressStore = useProgressStore();\r\nconst router = useRouter();\r\n\r\nconst { dropZones } = storeToRefs(store);\r\nconst { topologyList } = storeToRefs(topologyStore);\r\n\r\n// 선긋기 용\r\nconst clickedButtons = ref([]);\r\nconst completedLines = ref([]); // 실선 (완성된 선)\r\nconst pendingLines = ref([]); // 점선 (연결 중인 선)\r\n// 순서대로 클릭하기\r\nconst allowedZoneOrder = [1, 2, 3, 4, 5, 6, 7]; // 올바른 Zone 순서 정의\r\nlet currentZoneIndex = ref(0); // 현재 Zone 순서 추적\r\n\r\n// 아이템 저장용\r\nconst listItem = ref([]);\r\nvar dialogText = ref(\"\");\r\nconst showDialog = ref(false);\r\nconst maxTopology = ref(0);\r\nconst comparison = computed(() => topologyStore.topologyList.length);\r\n\r\nconst colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\r\nconst textColors = [\r\n  \"white\",\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n];\r\nconst defaultButtonColor = \"var(--item-header-bgcolor)\"; // 원래 색상\r\nconst defaultTextColor = \"var(--item-header-textcolor)\";\r\n\r\nconst emit = defineEmits([\"openDialog\"]);\r\n\r\nconst openDialog = (id, uniqueId, label) => {\r\n  emit(\"openDialog\", id, uniqueId, label);\r\n};\r\n\r\nwatch(\r\n  () =>\r\n    dropZones.value.map((zone) => zone.items.map((item) => item.setProperty)),\r\n  () => {\r\n    nextTick(() => {\r\n      resetButtons(); // 모든 아이템 상태 기반으로 색 다시 칠함\r\n    });\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nwatch(\r\n  () =>\r\n    topologyStore.topologyList\r\n      .flat()\r\n      .map((node) => `${node.uniqueId}:${node.setProperty}`)\r\n      .join(\"|\"),\r\n  () => {\r\n    console.log(\"📦 상태 변경 감지됨!\");\r\n  }\r\n);\r\n\r\nconst resetButtons = () => {\r\n  dropZones.value.forEach((zone) => {\r\n    zone.items.forEach((item) => {\r\n      const header = document.querySelector(`.header-${item.uniqueId}`);\r\n      if (!header) return;\r\n\r\n      if (item.setProperty) {\r\n        // setProperty true인 건 색 유지\r\n        header.style.backgroundColor = \"#0056b3\";\r\n        return;\r\n      }\r\n\r\n      header.style.backgroundColor = defaultButtonColor;\r\n      header.style.color = defaultTextColor;\r\n    });\r\n  });\r\n};\r\n\r\nconst clearLines = (event) => {\r\n  if (event.key === \"Escape\") {\r\n    pendingLines.value = []; // 연결 중인 선(점선)만 삭제\r\n\r\n    clickedButtons.value = [];\r\n    currentZoneIndex.value = 0;\r\n    listItem.value = [];\r\n    resetButtons();\r\n  }\r\n\r\n  if (event === \"finish\") {\r\n    clickedButtons.value = [];\r\n    currentZoneIndex.value = 0;\r\n    listItem.value = [];\r\n    resetButtons();\r\n  }\r\n\r\n  resetButtons();\r\n};\r\n\r\n// 최대구성개수 계산 함수\r\nconst calculateMaxTopology = () => {\r\n  //  765(Zone ID: 2)는 제외하지 않고 포함\r\n  const relevantZones = dropZones.value.filter((zone) => zone.id !== 2);\r\n  const allFilled = relevantZones.every((zone) => zone.items.length > 0);\r\n\r\n  if (allFilled) {\r\n    maxTopology.value = dropZones.value.reduce(\r\n      (product, zone) => product * (zone.items.length || 1), //  765가 비어있으면 1로 처리\r\n      1\r\n    );\r\n  } else {\r\n    maxTopology.value = 0;\r\n  }\r\n};\r\n\r\n// 컴포넌트 마운트 시 ESC 키 이벤트 리스너 추가\r\nonMounted(() => {\r\n  window.addEventListener(\"keydown\", clearLines);\r\n  // 최대구성 계산\r\n  calculateMaxTopology();\r\n  console.log(\"Step2 mount!\", topologyStore.topologyList);\r\n});\r\n\r\nonBeforeRouteLeave(() => {\r\n  // test용이라 주석처리\r\n  // topologyStore.clearTopologyList();\r\n});\r\n\r\n// 컴포넌트 언마운트 시 이벤트 리스너 제거 (메모리 누수 방지)\r\nonUnmounted(() => {\r\n  window.removeEventListener(\"keydown\", clearLines);\r\n});\r\n\r\nconst connectButton = (event, buttonId, zoneId, item) => {\r\n  const button = event.currentTarget;\r\n  console.log(\"click\", button);\r\n  const rect = button.getBoundingClientRect();\r\n\r\n  // 1번 zone부터 순서대로 입력해야 함\r\n  if (clickedButtons.value.length === 0 && zoneId !== 1) {\r\n    dialogText = \"발전소부터 클릭하세요!\";\r\n    showDialog.value = true;\r\n    highlightInvalidZone(zoneId);\r\n    return;\r\n  }\r\n\r\n  if (zoneId === 1 && topologyStore.isNotAdd()) {\r\n    dialogText = \"더이상 리스트를 추가할 수 없습니다.\";\r\n    showDialog.value = true;\r\n    return;\r\n  }\r\n\r\n  const zone765 = dropZones.value.find((zone) => zone.id === 2);\r\n  const zone765HasItems = zone765 && zone765.items.length > 0;\r\n  const previousZone = allowedZoneOrder[currentZoneIndex.value - 1];\r\n\r\n  // 🔹 765kV(2번) 생략 가능 조건 추가\r\n  const isSkippingZone765 =\r\n    !zone765HasItems && previousZone === 1 && zoneId === 3;\r\n\r\n  // 4번과 7번 zone은 여러 개 선택 가능\r\n  const isMultiSelectableZone = [4, 7].includes(zoneId);\r\n\r\n  // 현재 선택된 zone이 올바른 순서인지 체크하는 일반화된 로직\r\n  const isNextZone = allowedZoneOrder[currentZoneIndex.value] === zoneId;\r\n  const isContinuingMultiSelect =\r\n    isMultiSelectableZone &&\r\n    clickedButtons.value.some((btn) => btn.zoneId === zoneId);\r\n\r\n  // 🔹 22.9kV(5번)을 클릭한 경우, 반드시 6번(수요지역)으로만 이동 가능하도록 제한\r\n  const lastSelectedZone =\r\n    clickedButtons.value.length > 0\r\n      ? clickedButtons.value[clickedButtons.value.length - 1].zoneId\r\n      : null;\r\n  const isValidTransition =\r\n    (isNextZone || isSkippingZone765 || isContinuingMultiSelect) &&\r\n    !(lastSelectedZone === 5 && zoneId !== 6); // 5번(22.9) 클릭 후에는 6번(수요지역)으로만 이동 가능\r\n\r\n  if (isValidTransition) {\r\n    const x = rect.left + rect.width / 2;\r\n    const y = rect.top + rect.height / 2;\r\n\r\n    if (\r\n      !clickedButtons.value.some((btn) => btn.id === buttonId) ||\r\n      isMultiSelectableZone\r\n    ) {\r\n      clickedButtons.value.push({ id: buttonId, zoneId, x, y });\r\n    }\r\n\r\n    if (clickedButtons.value.length > 1) {\r\n      const lastIndex = clickedButtons.value.length - 1;\r\n      pendingLines.value.push({\r\n        x1: clickedButtons.value[lastIndex - 1].x,\r\n        y1: clickedButtons.value[lastIndex - 1].y,\r\n        x2: clickedButtons.value[lastIndex].x,\r\n        y2: clickedButtons.value[lastIndex].y,\r\n      });\r\n    }\r\n\r\n    if (!listItem.value.includes(item)) {\r\n      listItem.value.push(item);\r\n    }\r\n\r\n    button.querySelector(\".header\").style.backgroundColor =\r\n      colors[topologyStore.topologyList.length];\r\n    button.querySelector(\".header\").style.color =\r\n      textColors[topologyStore.topologyList.length];\r\n\r\n    // Zone 이동 로직을 간소화하여 적용\r\n    if (\r\n      !isMultiSelectableZone ||\r\n      (isMultiSelectableZone && !isContinuingMultiSelect)\r\n    ) {\r\n      if (isSkippingZone765) {\r\n        currentZoneIndex.value += 2;\r\n      } else {\r\n        currentZoneIndex.value++;\r\n      }\r\n    }\r\n\r\n    console.log(currentZoneIndex.value);\r\n  } else {\r\n    dialogText = \"순서대로 입력하세요!\";\r\n    showDialog.value = true;\r\n    highlightInvalidZone(zoneId);\r\n    return;\r\n  }\r\n};\r\n\r\nconst addList = () => {\r\n  if (\r\n    listItem.value.length > 0 &&\r\n    listItem.value[listItem.value.length - 1].id === 7\r\n  ) {\r\n    dialogText = \"마지막까지 잘 연결\";\r\n    showDialog.value = true;\r\n    completedLines.value.push(...pendingLines.value);\r\n    pendingLines.value = [];\r\n    topologyStore.addTopology([...listItem.value]);\r\n    clearLines(\"finish\");\r\n  } else {\r\n    dialogText = \"마지막 NWAs 까지 연결하세요!\";\r\n    showDialog.value = true;\r\n  }\r\n\r\n  console.log(\"step2 : dropZones\", JSON.stringify(dropZones.value));\r\n  console.log(\r\n    \"step2 : topologyStore\",\r\n    JSON.stringify(topologyStore.topologyList)\r\n  );\r\n\r\n  dropZones.value = structuredClone(dropZones.value);\r\n};\r\n\r\n//  잘못된 zone 선택 시 이벤트\r\nconst highlightInvalidZone = (zoneId) => {\r\n  const zoneElement = document.querySelector(`.drop-zone[data-id=\"${zoneId}\"]`); //  정확한 요소 찾기\r\n\r\n  if (zoneElement) {\r\n    zoneElement.classList.add(\"error-zone\");\r\n    setTimeout(() => {\r\n      zoneElement.classList.remove(\"error-zone\");\r\n    }, 1000);\r\n  } else {\r\n    console.error(`존재하지 않는 zoneId: ${zoneId}`); //  디버깅용 로그 추가\r\n  }\r\n};\r\n\r\nconst getNextZoneName = () => {\r\n  const nextZone = dropZones.value.find(\r\n    (zone) => zone.id === allowedZoneOrder[currentZoneIndex.value]\r\n  );\r\n  return nextZone ? nextZone.name : \"완료\";\r\n};\r\n\r\nconst nextZoneId = computed(() => {\r\n  return allowedZoneOrder[currentZoneIndex.value]; // 다음 zone ID를 추적\r\n});\r\n\r\n// 드래그 중인 항목의 인덱스 저장\r\nconst draggedItemIndex = ref(null);\r\n\r\n// 드래그 시작 (현재 인덱스 저장)\r\nconst dragStart = (index) => {\r\n  draggedItemIndex.value = index;\r\n};\r\n\r\n// 드롭 시 리스트 순서 변경\r\nconst dropItem = (index) => {\r\n  if (draggedItemIndex.value === null) return;\r\n\r\n  const topologyStore = useTopologyStore(); // Store 가져오기\r\n\r\n  // 기존 리스트 복사 후 순서 변경\r\n  const updatedList = [...topologyStore.topologyList];\r\n  const draggedItem = updatedList.splice(draggedItemIndex.value, 1)[0];\r\n  updatedList.splice(index, 0, draggedItem);\r\n\r\n  // Store 업데이트 (반응형 유지)\r\n  topologyStore.setTopologyList(updatedList);\r\n\r\n  draggedItemIndex.value = null;\r\n};\r\n\r\n// 리스트 삭제 기능\r\nconst deleteTopology = (index) => {\r\n  const topologyStore = useTopologyStore();\r\n  topologyStore.removeTopology(index); //  Store의 삭제 메서드 사용\r\n};\r\n\r\n// \"다음\" 버튼 클릭 시 완료 검사 + 이동\r\nconst goToNextStep = () => {\r\n  if (isStep2Completed()) {\r\n    // 완료 조건 검사\r\n    progressStore.setStepCondition(\"step2\", true);\r\n    router.push(\"/step3\"); // Step3로 이동\r\n  } else {\r\n    progressStore.setStepCondition(\"step2\", false);\r\n  }\r\n};\r\n// 완료 조건 함수\r\nconst isStep2Completed = () => {\r\n  console.log(\"step2 : dropZones\", JSON.stringify(dropZones.value));\r\n  console.log(\r\n    \"step2 : topologyStore\",\r\n    JSON.stringify(topologyStore.topologyList)\r\n  );\r\n\r\n  if (topologyStore.topologyList.length < 2) {\r\n    // topologyList에 저장된 개수가 2개 미만이면\r\n    dialogText = \"2개 이상의 List를 생성하세요!\";\r\n    showDialog.value = true;\r\n    return false;\r\n  }\r\n\r\n  const temp = topologyStore.topologyList.every((group) =>\r\n    group.every((node) => node.setProperty)\r\n  );\r\n\r\n  topologyStore.topologyList.forEach((group, groupIdx) => {\r\n    group.forEach((node) => {\r\n      if (!node.setProperty) {\r\n        console.warn(\r\n          `❌ Group ${groupIdx}, Node ${node.label} (ID: ${node.id}) 는 아직 설정 안됨`\r\n        );\r\n\r\n        console.log(JSON.stringify(node));\r\n      }\r\n    });\r\n  });\r\n  \r\n\r\n  console.log(JSON.stringify(dropZones))\r\n\r\n  \r\n\r\n\r\n  if (!temp) {\r\n    dialogText = \"모든 아이템에 세부값을 수정하세요\";\r\n    showDialog.value = true;\r\n    return false;\r\n  }\r\n\r\n  return true; // 모든 조건을 충족하면 true 반환\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.step_container {\r\n  width: 1600px;\r\n}\r\n\r\n.arrangeArea {\r\n  position: relative;\r\n  overflow: visible;\r\n  height: 80%;\r\n\r\n  .title {\r\n    display: flex;\r\n\r\n    .guide-message {\r\n      width: 1420px;\r\n      text-align: center;\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n      color: #007bff;\r\n      margin: 10px;\r\n    }\r\n\r\n    .addList {\r\n      align-self: center;\r\n    }\r\n  }\r\n\r\n  .drop-zones {\r\n    gap: 40px;\r\n  }\r\n}\r\n\r\n.listArea {\r\n  padding: 0px 22px;\r\n  height: 200px;\r\n  width: 100%;\r\n\r\n  .v-row,\r\n  .v-col,\r\n  .v-card {\r\n    height: 100%;\r\n  }\r\n\r\n  .topology {\r\n    flex: 0 0 200px;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  .topologyList {\r\n    flex-grow: 1;\r\n    margin-left: 20px;\r\n    max-width: 1300px;\r\n  }\r\n\r\n  .topology-ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-y: auto;\r\n    height: 110px;\r\n\r\n    .topology-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 8px 12px;\r\n      border-bottom: 1px solid #ccc;\r\n      background: white;\r\n      transition: background 0.3s ease;\r\n\r\n      .topology-info {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        p {\r\n          margin: 0px;\r\n          width: 80px;\r\n          display: flex;\r\n          justify-content: space-around;\r\n\r\n          span {\r\n            margin: 0px 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .draggable-item {\r\n    cursor: grab;\r\n  }\r\n\r\n  .drag-handle {\r\n    cursor: grab;\r\n    font-size: 24px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .topology-actions {\r\n    .v-btn {\r\n      background-color: #ff5252 !important; // 삭제 버튼 배경 색상 (빨간색)\r\n      width: 28px !important; // 버튼 크기 조정\r\n      height: 28px !important;\r\n      min-width: 28px !important;\r\n      border-radius: 50% !important; // 동그란 버튼 유지\r\n      display: flex !important;\r\n      align-items: center !important;\r\n      justify-content: center !important;\r\n\r\n      //  버튼에 hover 효과 추가\r\n      &:hover {\r\n        background-color: darken(\r\n          #ff5252,\r\n          10%\r\n        ) !important; // 마우스 오버 시 색상 어둡게\r\n      }\r\n\r\n      //  버튼이 비활성화된 경우\r\n      &.v-btn--disabled {\r\n        background-color: lighten(\r\n          #ff5252,\r\n          20%\r\n        ) !important; // 비활성화 시 더 밝게\r\n      }\r\n\r\n      //  아이콘 스타일 조정\r\n      .v-icon {\r\n        font-size: 14px !important; // 아이콘 크기 조정\r\n        color: white !important; // 아이콘 색상\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.connection-svg {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  z-index: -1; /*  버튼 뒤로 보내기 */\r\n  height: 100vh; /*  전체 높이를 유지하여 선이 가려지지 않도록 */\r\n  pointer-events: none; /*  클릭 이벤트 방지 */\r\n  z-index: 0; /*  drop-zone과 버튼보다 아래에 위치 */\r\n}\r\n\r\n.round {\r\n  position: relative;\r\n  z-index: 2; /*  버튼을 가장 위로 배치 */\r\n}\r\n\r\n.active-zone {\r\n  border: 3px solid #007bff !important; /* 파란색 테두리 강조 */\r\n  background-color: rgba(0, 123, 255, 0.1); /* 연한 파란색 배경 */\r\n  transition: 0.3s ease-in-out;\r\n}\r\n\r\n.next-clickable {\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 15px rgba(0, 123, 255, 0.8);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\r\n  }\r\n}\r\n\r\n.error-zone {\r\n  animation: shake 0.3s ease-in-out;\r\n  border: 2px solid red !important;\r\n}\r\n\r\n@keyframes shake {\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  25% {\r\n    transform: translateX(-5px);\r\n  }\r\n  50% {\r\n    transform: translateX(5px);\r\n  }\r\n  75% {\r\n    transform: translateX(-5px);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n</style>","import script from \"./Step2View.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Step2View.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Step2View.vue?vue&type=style&index=0&id=7bdfaa2b&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7bdfaa2b\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"step_container\">\r\n    <v-container class=\"treeArea\">\r\n      <div class=\"topologyList\">\r\n        <span\r\n          v-for=\"(list, index) in topologyList\"\r\n          :key=\"index\"\r\n          @click=\"highlightList(index)\"\r\n          :style=\"{\r\n            display: 'inline-block',\r\n            padding: '3px 15px',\r\n            marginRight: '10px',\r\n            borderRadius: '5px',\r\n            fontSize: '12px',\r\n            fontWeight: 'bold',\r\n            cursor: 'pointer',\r\n            border:\r\n              highlightedIndex === index\r\n                ? `2px solid ${colors[index % colors.length]}`\r\n                : 'none',\r\n            color: textColors[index % textColors.length],\r\n            backgroundColor: colors[index % colors.length],\r\n          }\"\r\n        >\r\n          List {{ index + 1 }}\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        v-for=\"(zone, zoneIndex) in orderedZones\"\r\n        :key=\"zoneIndex\"\r\n        class=\"zone-column\"\r\n      >\r\n        <p class=\"zone-title\">{{ zone.name }}</p>\r\n        <div class=\"vertical-layout\">\r\n          <button\r\n            v-for=\"node in zone.nodes\"\r\n            :key=\"node.uniqueId\"\r\n            class=\"node-button\"\r\n            :class=\"{\r\n              'node-disabled':\r\n                node.label === '수요지역' || node.uniqueId === nextNodeId,\r\n              'node-selected': isNodeInSelectedList(node), // 선택된 리스트 내에 있으면 적용\r\n              'node-active':\r\n                isNodeInSelectedList(node) && node.lat !== 0 && node.lng !== 0, // 좌표가 설정된 경우만 색상 변경\r\n            }\"\r\n            @click=\"\r\n              isNodeInSelectedList(node) && node.label !== '수요지역'\r\n                ? btnCoordinates(node.uniqueId, node.label, node.id)\r\n                : null\r\n            \"\r\n            :data-zone-index=\"zoneIndex\"\r\n            :data-node-id=\"node.uniqueId\"\r\n            :style=\"{\r\n              backgroundColor: isNodeInSelectedList(node)\r\n                ? node.lat !== 0 && node.lng !== 0\r\n                  ? colors[highlightedIndex % colors.length] // 좌표가 있는 경우 리스트 색상 적용\r\n                  : '#2C3E50' // 선택된 리스트의 기본 색상\r\n                : '#808080', // 선택되지 않은 리스트는 회색\r\n              color: isNodeInSelectedList(node)\r\n                ? node.lat !== 0 && node.lng !== 0\r\n                  ? textColors[highlightedIndex % colors.length] // 좌표가 있는 경우 리스트 색상 적용\r\n                  : '#fff' // 선택된 리스트의 기본 색상\r\n                : '#000', // 선택되지 않은 리스트는 회색\r\n              opacity: isNodeInSelectedList(node) ? 1 : 0.4, // 리스트에 속하지 않으면 흐리게\r\n            }\"\r\n            :disabled=\"!isNodeInSelectedList(node) || node.label === '수요지역'\"\r\n          >\r\n            {{ node.label }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"step-controls\">\r\n        <v-btn class=\"step-button\" @click=\"goToNextStep\"> 확인 </v-btn>\r\n      </div>\r\n    </v-container>\r\n\r\n    <svg class=\"connection-svg\">\r\n      <line\r\n        v-for=\"(line, index) in computedLines\"\r\n        :key=\"index\"\r\n        :x1=\"line.x1\"\r\n        :y1=\"line.y1\"\r\n        :x2=\"line.x2\"\r\n        :y2=\"line.y2\"\r\n        :stroke=\"computedStrokeColors[index]\"\r\n        stroke-width=\"2\"\r\n        :class=\"{\r\n          'highlighted-line': selectedLines.has(index),\r\n          'dimmed-line': !selectedLines.has(index),\r\n        }\"\r\n      />\r\n    </svg>\r\n\r\n    <div class=\"mapArea\" id=\"map\" ref=\"mapRef\"></div>\r\n\r\n    <v-dialog v-model=\"showDialog\" max-width=\"400px\">\r\n      <v-card>\r\n        <v-card-title> 경고 </v-card-title>\r\n        <v-card-text> {{ dialogText }} </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"primary\" @click=\"showDialog = false\">닫기</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, nextTick, onMounted, computed } from \"vue\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useTopologyStore } from \"../store/topologyStore.js\";\r\nimport { useProgressStore } from \"../store/progressStore.js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst topologyStore = useTopologyStore();\r\nconst progressStore = useProgressStore();\r\nconst router = useRouter();\r\n\r\nconst { topologyList } = storeToRefs(topologyStore);\r\n\r\nconst buttons = ref([]);\r\nconst computedLines = ref([]);\r\nconst highlightedIndex = ref(0);\r\nconst nextNodeId = ref(null);\r\n\r\nconst selectedNodes = ref(new Set()); //  선택된 리스트의 노드 저장\r\nconst selectedLines = ref(new Set()); //  선택된 리스트의 선 저장\r\n// let markers = [];\r\nlet map;\r\nlet pathLines = []; // 각 그룹별 Polyline 저장\r\n\r\nvar dialogText = ref(\"\");\r\nconst showDialog = ref(false);\r\n\r\n/**\r\n *  ZONE 분류 및 정렬\r\n */\r\nconst zoneOrder = [\r\n  { id: 7, name: \"NWAs\" },\r\n  { id: 6, name: \"수요지역\" },\r\n  { id: 5, name: \"22.9\" },\r\n  { id: 4, name: \"154\" },\r\n  { id: 3, name: \"345\" },\r\n  { id: 2, name: \"765\" },\r\n  { id: 1, name: \"발전소\" },\r\n];\r\n\r\nconst colors = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"];\r\nconst textColors = [\r\n  \"white\",\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n  \"white\",\r\n];\r\n\r\nonMounted(() => {\r\n  nextTick(() => {\r\n    updateLines();\r\n  });\r\n\r\n  // Google Maps API가 로드될 때까지 대기\r\n  const waitForGoogleMaps = setInterval(() => {\r\n    if (window.google && window.google.maps) {\r\n      clearInterval(waitForGoogleMaps);\r\n      window.initMap();\r\n    }\r\n  }, 100);\r\n\r\n  // 765 or 345 비활성화\r\n  let found = false;\r\n\r\n  topologyList.value.forEach((list) => {\r\n    list.forEach((item) => {\r\n      if (!found && item.id === 2) {\r\n        nextNodeId.value = item.uniqueId;\r\n        found = true; // 첫 번째로 찾은 2번 노드만 반영\r\n      }\r\n    });\r\n  });\r\n\r\n  if (!found) {\r\n    topologyList.value.forEach((list) => {\r\n      list.forEach((item) => {\r\n        if (item.id === 3) {\r\n          nextNodeId.value = item.uniqueId;\r\n        }\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\nconst isNodeInSelectedList = (node) => {\r\n  return selectedNodes.value.has(node.uniqueId);\r\n};\r\n\r\nconst orderedZones = computed(() => {\r\n  // Zone을 정렬할 기준 (ID 값으로 분류)\r\n  // Zone을 저장할 Map 생성\r\n  const zoneMap = new Map(\r\n    zoneOrder.map(({ id, name }) => [id, { name, nodes: [] }])\r\n  );\r\n  const seenIds = new Set(); // 중복 방지용 Set\r\n\r\n  // topologyList 데이터를 순회하며 각 노드를 적절한 Zone에 배치\r\n  topologyList.value.forEach((list) => {\r\n    list.forEach((node) => {\r\n      if (seenIds.has(node.uniqueId)) return; // 중복 방지\r\n      seenIds.add(node.uniqueId);\r\n\r\n      // 해당 노드의 ID를 기반으로 Zone 찾기\r\n      const zone = zoneMap.get(node.id) || zoneMap.get(7); // ID 없으면 NWAs에 배정\r\n      zone.nodes.push(node);\r\n    });\r\n  });\r\n\r\n  // 순서에 맞게 Zone을 배열로 정렬하고, 빈 Zone은 제거\r\n  return zoneOrder.map(({ id }) => zoneMap.get(id));\r\n});\r\n\r\n/**\r\n *  버튼 위치를 가져와 선을 계산하는 함수\r\n */\r\nconst updateLines = async () => {\r\n  computedLines.value = []; //  기존 선 초기화\r\n  await nextTick(); //  DOM 업데이트 후 실행\r\n\r\n  requestAnimationFrame(() => {\r\n    buttons.value = Array.from(document.querySelectorAll(\".node-button\"));\r\n\r\n    if (buttons.value.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const buttonMap = new Map();\r\n\r\n    //  버튼을 uniqueId 기준으로 매핑\r\n    buttons.value.forEach((btn) => {\r\n      const zoneIndex = btn.getAttribute(\"data-zone-index\");\r\n      const nodeId = btn.getAttribute(\"data-node-id\");\r\n\r\n      if (!zoneIndex || !nodeId) {\r\n        return;\r\n      }\r\n\r\n      buttonMap.set(`${zoneIndex}-${nodeId}`, btn);\r\n    });\r\n\r\n    //  리스트 별 연결\r\n    topologyList.value.forEach((list, listIndex) => {\r\n      list.forEach((node, nodeIndex) => {\r\n        if (nodeIndex === list.length - 1) return; // 마지막 노드는 연결할 대상 없음\r\n\r\n        const nextNode = list[nodeIndex + 1];\r\n\r\n        //  현재 노드가 속한 Zone 찾기\r\n        const currentZoneIndex = orderedZones.value.findIndex((zone) =>\r\n          zone.nodes.some((zNode) => zNode.uniqueId === node.uniqueId)\r\n        );\r\n\r\n        const nextZoneIndex = orderedZones.value.findIndex((zone) =>\r\n          zone.nodes.some((zNode) => zNode.uniqueId === nextNode.uniqueId)\r\n        );\r\n\r\n        if (currentZoneIndex === -1 || nextZoneIndex === -1) return;\r\n\r\n        const startButton = buttonMap.get(\r\n          `${currentZoneIndex}-${node.uniqueId}`\r\n        );\r\n        const endButton = buttonMap.get(\r\n          `${nextZoneIndex}-${nextNode.uniqueId}`\r\n        );\r\n\r\n        if (!startButton || !endButton) {\r\n          return;\r\n        }\r\n\r\n        const startRect = startButton.getBoundingClientRect();\r\n        const endRect = endButton.getBoundingClientRect();\r\n\r\n        computedLines.value.push({\r\n          x1: startRect.left + startRect.width / 2,\r\n          y1: startRect.top + startRect.height / 2 + window.scrollY,\r\n          x2: endRect.left + endRect.width / 2,\r\n          y2: endRect.top + endRect.height / 2 + window.scrollY,\r\n          startNodeId: node.uniqueId,\r\n          endNodeId: nextNode.uniqueId,\r\n          listIndex: listIndex, //  리스트 별 강조 가능하도록 listIndex 저장\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n//  동적으로 선 색상 계산\r\nconst highlightList = (index) => {\r\n  highlightedIndex.value = index; //  현재 강조할 리스트 인덱스 저장\r\n  selectedNodes.value.clear();\r\n  selectedLines.value.clear();\r\n  selectedButton.value = null; // 🔹 선택된 버튼 초기화 (클릭한 버튼 해제)\r\n\r\n  if (topologyList.value[index]) {\r\n    topologyList.value[index].forEach((node) => {\r\n      selectedNodes.value.add(node.uniqueId);\r\n    });\r\n\r\n    computedLines.value.forEach((line, lineIndex) => {\r\n      if (line.listIndex === index) {\r\n        selectedLines.value.add(lineIndex);\r\n      }\r\n    });\r\n  }\r\n\r\n  markers.forEach((marker) => {\r\n    const matchingNode = topologyList.value[index].find(\r\n      (node) => node.uniqueId === marker.btnId\r\n    );\r\n    if (matchingNode) {\r\n      marker.setIcon({\r\n        ...svgMarker(colors[index % colors.length]), // 선택된 리스트 색상 적용\r\n        anchor: new window.google.maps.Point(12, 22),\r\n        scaledSize: new window.google.maps.Size(24, 24),\r\n      });\r\n    } else {\r\n      marker.setIcon({\r\n        ...svgMarker(\"#808080\"), // 선택되지 않은 마커는 회색\r\n        anchor: new window.google.maps.Point(12, 22),\r\n        scaledSize: new window.google.maps.Size(24, 24),\r\n      });\r\n    }\r\n  });\r\n\r\n  updatePolyline(); // 🔹 리스트 선택 시 폴리라인도 업데이트\r\n  updatePopups(); // 🔹 리스트 선택 시 팝업도 해당 리스트의 것만 보이게 설정\r\n};\r\n\r\nconst computedStrokeColors = computed(() => {\r\n  return computedLines.value.map((line, index) => {\r\n    return selectedLines.value.has(index)\r\n      ? colors[line.listIndex % colors.length] //  리스트 인덱스를 기반으로 색상 선택\r\n      : \"gray\"; //  나머지는 회색\r\n  });\r\n});\r\n\r\nconst loadGoogleMaps = () => {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.google && window.google.maps) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBXEVH1qv_P54Ew7f7uiYtdK0YQ7h3c3Yg&libraries=geometry,places`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => {\r\n      resolve();\r\n    };\r\n    script.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n\r\n    document.head.appendChild(script);\r\n  });\r\n};\r\n\r\n// 🔹 \"수요지역\" sig_cd 찾기\r\nconst getSIG_CD = () => {\r\n  if (!Array.isArray(topologyList.value)) return null;\r\n\r\n  const flatNodes = topologyList.value.flat(); // 리스트 펼치기\r\n\r\n  for (const item of flatNodes) {\r\n    if (item.label !== \"수요지역\") continue; // \"수요지역\"이 아니면 건너뜀\r\n\r\n    // 수요지역 객체 자체를 반환 (주소가 아니라)\r\n    return item;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nlet CustomPopup;\r\n\r\n// 🔹 지도 초기화 함수\r\nwindow.initMap = async () => {\r\n  await loadGoogleMaps();\r\n\r\n  CustomPopup = class CustomPopup extends (\r\n    (window.google?.maps?.OverlayView || class {})\r\n  ) {\r\n    constructor(position, content, id) {\r\n      super();\r\n      if (!window.google || !window.google.maps) {\r\n        throw new Error(\"Google Maps API가 로드되지 않았습니다.\");\r\n      }\r\n\r\n      this.position = position;\r\n      this.id = id;\r\n\r\n      this.containerDiv = document.createElement(\"div\");\r\n      this.containerDiv.className = \"custom-popup\";\r\n      this.containerDiv.style.position = \"absolute\";\r\n      this.containerDiv.style.display = \"none\"; // 기본적으로 숨김\r\n      this.containerDiv.style.transform = \"translate(-50%, -150%)\"; // 마커 중앙 위로 정렬\r\n      this.containerDiv.style.backgroundColor = \"white\";\r\n      this.containerDiv.style.boxShadow = \"0px 2px 10px rgba(0,0,0,0.3)\";\r\n      this.containerDiv.style.borderRadius = \"8px\";\r\n      this.containerDiv.style.whiteSpace = \"nowrap\";\r\n\r\n      this.containerDiv.innerHTML = `\r\n      <div class=\"custom-popup-header\" style=\"font-weight: bold; display: flex; justify-content: space-between; align-items: center;\">\r\n        📍 ${content.title}\r\n        <span class=\"custom-popup-close\" style=\"cursor: pointer;\">&times;</span>\r\n      </div>\r\n      <div class=\"custom-popup-body\" style=\"margin-top: 5px;\">${content.body}</div>\r\n    `;\r\n\r\n      // 닫기 버튼 이벤트 추가\r\n      const closeBtn = this.containerDiv.querySelector(\".custom-popup-close\");\r\n      closeBtn?.addEventListener(\"click\", () => {\r\n        this.hide();\r\n      });\r\n    }\r\n\r\n    onAdd() {\r\n      this.getPanes().floatPane.appendChild(this.containerDiv); // `floatPane` 사용하여 마커 위에 배치\r\n      this.show(); // 팝업을 자동으로 표시\r\n    }\r\n\r\n    draw() {\r\n      const projection = this.getProjection();\r\n      if (!projection) return;\r\n\r\n      const pos = projection.fromLatLngToDivPixel(this.position);\r\n      if (pos) {\r\n        this.containerDiv.style.left = `${pos.x}px`;\r\n        this.containerDiv.style.top = `${pos.y - 15}px`; // 마커 위로 조정\r\n      }\r\n    }\r\n\r\n    onRemove() {\r\n      if (this.containerDiv.parentElement) {\r\n        this.containerDiv.parentElement.removeChild(this.containerDiv);\r\n      }\r\n    }\r\n\r\n    show() {\r\n      this.containerDiv.style.display = \"block\";\r\n    }\r\n\r\n    hide() {\r\n      this.containerDiv.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // 주소 변환 → 좌표 가져오기\r\n  const item = getSIG_CD();\r\n  if (!item) return;\r\n\r\n  const addressObj = item.property?.find((p) => p.name === \"주소\");\r\n  const address = addressObj?.values?.[0]?.data || null;\r\n\r\n  const coordinates = await getCoordinatesFromAddress(address);\r\n\r\n  // 지도 초기화\r\n  const mapElement = document.getElementById(\"map\");\r\n  if (!mapElement) return;\r\n\r\n  map = new window.google.maps.Map(mapElement, {\r\n    zoom: 3,\r\n    mapTypeId: \"hybrid\",\r\n\r\n    styles: [\r\n      { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#ffffff\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#000000\" }] },\r\n    ],\r\n  });\r\n\r\n  // 지도 중심 좌표 조정\r\n  const bounds = new window.google.maps.LatLngBounds();\r\n  bounds.extend(coordinates);\r\n  map.fitBounds(bounds);\r\n\r\n  setCoordinates(\r\n    item.uniqueId,\r\n    bounds.getCenter().lat(),\r\n    bounds.getCenter().lng()\r\n  );\r\n\r\n  window.google.maps.event.addListenerOnce(map, \"bounds_changed\", () => {\r\n    map.setZoom(12);\r\n  });\r\n\r\n  // 수요지역 마커 추가\r\n  const marker = new window.google.maps.Marker({\r\n    position: bounds.getCenter(),\r\n    map: map,\r\n    icon: {\r\n      ...svgMarker(\"#f00\"),\r\n      anchor: new window.google.maps.Point(12, 22), // 기준점을 아이콘 하단으로 조정\r\n      scaledSize: new window.google.maps.Size(24, 24), // 크기 조정\r\n    },\r\n  });\r\n\r\n  // 커스텀 팝업 추가\r\n  const customPopup = new CustomPopup(bounds.getCenter(), {\r\n    title: \"수요지역\",\r\n    body: `\r\n      위도: ${bounds.getCenter().lat()}<br>\r\n      경도: ${bounds.getCenter().lng()}\r\n    `,\r\n  });\r\n\r\n  customPopup.setMap(map);\r\n\r\n  // 마커 클릭하면 팝업 표시\r\n  marker.addListener(\"click\", () => {\r\n    customPopup.show();\r\n  });\r\n\r\n  // 초기에 팝업 표시\r\n  customPopup.show();\r\n\r\n  map.addListener(\"click\", (event) => {\r\n    addMarker(event.latLng);\r\n  });\r\n};\r\n\r\nconst svgMarker = (color) => ({\r\n  path: \"M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12,2Z\",\r\n  fillColor: color,\r\n  fillOpacity: 1,\r\n  strokeWeight: 1,\r\n  strokeColor: \"#FFFFFF\",\r\n  scale: 2,\r\n});\r\n\r\nconst getCoordinatesFromAddress = (address) => {\r\n  return new Promise((resolve, reject) => {\r\n    let geocoder = new window.google.maps.Geocoder();\r\n\r\n    geocoder.geocode({ address }, (results, status) => {\r\n      if (status === \"OK\" && results[0]) {\r\n        const location = results[0].geometry.location;\r\n        resolve({ lat: location.lat(), lng: location.lng() });\r\n      } else {\r\n        reject(status);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n// 특정 uniqueId의 위경도 값 업데이트\r\nconst setCoordinates = (uniqueId, lat, lng) => {\r\n  if (!Array.isArray(topologyList.value)) return;\r\n\r\n  topologyList.value = topologyList.value.map((group) =>\r\n    group.map((item) =>\r\n      item.uniqueId === uniqueId\r\n        ? { ...item, lat, lng } // 새로운 객체 생성하여 Vue가 변경 감지하도록 처리\r\n        : item\r\n    )\r\n  );\r\n};\r\n\r\nconst mapRef = ref(null);\r\nlet markers = [];\r\nlet popups = [];\r\n\r\nconst selectedButton = ref(null);\r\n\r\nconst btnCoordinates = (uniqueId, label, id) => {\r\n  selectedButton.value = { uniqueId: uniqueId, label: label, id: id };\r\n};\r\n\r\nconst addMarker = (latLng) => {\r\n  if (selectedButton.value === null) return; // 선택된 버튼이 없으면 무시\r\n\r\n  const newCoord = { lat: latLng.lat(), lng: latLng.lng() };\r\n\r\n  // 🔹 선택된 버튼이 속한 그룹 찾기\r\n  const groupIndex = topologyList.value.findIndex((group) =>\r\n    group.some((item) => item.uniqueId === selectedButton.value.uniqueId)\r\n  );\r\n\r\n  if (groupIndex === -1) {\r\n    console.error(\"❌ 선택된 버튼의 리스트를 찾을 수 없습니다.\");\r\n    return;\r\n  }\r\n\r\n  // 🔹 선택된 리스트의 색상을 가져옴\r\n  const selectedColor =\r\n    highlightedIndex.value !== null\r\n      ? colors[highlightedIndex.value % colors.length] // 현재 선택된 리스트의 색상\r\n      : colors[groupIndex % colors.length]; // 기본적으로 그룹 색상 사용\r\n\r\n  // 🔹 중복 좌표 방지 (같은 버튼이면 기존 좌표 제거)\r\n  topologyList.value = topologyList.value.map((group) =>\r\n    group.map((item) =>\r\n      item.uniqueId === selectedButton.value.uniqueId\r\n        ? { ...item, lat: newCoord.lat, lng: newCoord.lng }\r\n        : item\r\n    )\r\n  );\r\n\r\n  // 🔸 id === 1이면 다음 노드도 동일한 좌표로 업데이트\r\n\r\nif (selectedButton.value.id === 1) {\r\n  const allNodes = topologyList.value.flat();\r\n\r\n  const currentIndex = allNodes.findIndex(\r\n    (item) => item.uniqueId === selectedButton.value.uniqueId\r\n  );\r\n\r\n  const nextNode = allNodes[currentIndex + 1];\r\n\r\n  if (nextNode) {\r\n    console.log(\"nextNode 좌표 업데이트\", nextNode.label);\r\n\r\n    // nextNode와 uniqueId가 같은 모든 노드 찾아서 좌표 업데이트\r\n    topologyList.value.forEach((group) => {\r\n      group.forEach((node) => {\r\n        if (node.uniqueId === nextNode.uniqueId) {\r\n          node.lat = newCoord.lat;\r\n          node.lng = newCoord.lng;\r\n        }\r\n      });\r\n    });\r\n\r\n    // UI용 nextNodeId 저장\r\n    nextNodeId.value = nextNode.uniqueId;\r\n  } else {\r\n    console.log(\"nextNode 없음\");\r\n  }\r\n}\r\n\r\n  // 🔹 기존 마커 업데이트 (색상 변경)\r\n  let markerExists = false;\r\n  markers.forEach((marker) => {\r\n    if (marker.btnId === selectedButton.value.uniqueId) {\r\n      marker.setIcon({\r\n        ...svgMarker(selectedColor), // 🔹 현재 선택된 리스트 색상 적용\r\n        anchor: new window.google.maps.Point(12, 22),\r\n        scaledSize: new window.google.maps.Size(24, 24),\r\n      });\r\n      marker.setPosition(newCoord); // 좌표 업데이트\r\n      markerExists = true;\r\n    }\r\n  });\r\n\r\n  // 🔹 기존 마커가 없으면 새로 생성\r\n  if (!markerExists) {\r\n    const marker = new window.google.maps.Marker({\r\n      position: newCoord,\r\n      map: map,\r\n      title: `Marker for ${selectedButton.value.uniqueId}`,\r\n      icon: {\r\n        ...svgMarker(selectedColor), // 🔹 리스트 색상 반영\r\n        anchor: new window.google.maps.Point(12, 22),\r\n        scaledSize: new window.google.maps.Size(24, 24),\r\n      },\r\n    });\r\n    marker.btnId = selectedButton.value.uniqueId;\r\n    markers.push(marker);\r\n  }\r\n\r\n  // 🔹 기존 팝업 제거 (중복 방지)\r\n  popups = popups.filter((popup) => {\r\n    if (popup.btnId === selectedButton.value.uniqueId) {\r\n      popup.setMap(null); // 팝업을 지도에서 제거\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  // 🔹 새로운 팝업 추가\r\n  const customPopup = new CustomPopup(newCoord, {\r\n    title: selectedButton.value.label,\r\n    id: selectedButton.value.uniqueId,\r\n    body: `\r\n      위도: ${newCoord.lat}<br>\r\n      경도: ${newCoord.lng}\r\n    `,\r\n  });\r\n\r\n  customPopup.btnId = selectedButton.value.uniqueId; // 팝업에 고유 ID 추가\r\n  customPopup.setMap(map);\r\n  popups.push(customPopup);\r\n\r\n  // 🔹 마커 클릭하면 해당 팝업만 표시\r\n  markers.forEach((marker) => {\r\n    marker.addListener(\"click\", () => {\r\n      popups.forEach((popup) => {\r\n        if (popup.btnId === marker.btnId) {\r\n          popup.show();\r\n        } else {\r\n          popup.hide(); // 다른 팝업은 숨김\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  // 🔹 리스트가 변경될 경우 팝업을 업데이트\r\n  updatePopups();\r\n  updatePolyline();\r\n\r\n  console.log(topologyList.value);\r\n};\r\n\r\n// 🔹 같은 그룹 내에서만 Polyline을 다시 그림\r\nconst updatePolyline = () => {\r\n  if (!map) {\r\n    console.error(\"❌ 지도(map)가 아직 초기화되지 않았습니다.\");\r\n    return;\r\n  }\r\n\r\n  // 기존 Polyline 제거 (이전 선 삭제)\r\n  pathLines.forEach((polyline) => polyline.setMap(null));\r\n  pathLines = [];\r\n\r\n  // 🔹 현재 선택된 리스트가 없는 경우 종료\r\n  if (highlightedIndex.value === null) return;\r\n\r\n  // 🔹 선택된 리스트 가져오기\r\n  const selectedGroup = topologyList.value[highlightedIndex.value];\r\n  if (!selectedGroup) return;\r\n\r\n  let validCoordinates = [];\r\n\r\n  // 🔹 선택된 리스트의 좌표가 설정된 노드 추가\r\n  selectedGroup.forEach((node) => {\r\n    if (\r\n      Number.isFinite(node.lat) &&\r\n      Number.isFinite(node.lng) &&\r\n      node.lat !== 0 &&\r\n      node.lng !== 0\r\n    ) {\r\n      validCoordinates.push({ lat: node.lat, lng: node.lng });\r\n    }\r\n\r\n    // 🔹 동일한 uniqueId를 가진 노드가 다른 리스트에도 존재하는지 확인하여 추가\r\n    topologyList.value.forEach((otherGroup) => {\r\n      otherGroup.forEach((otherNode) => {\r\n        if (\r\n          otherNode.uniqueId === node.uniqueId && // 같은 uniqueId 노드인지 확인\r\n          Number.isFinite(otherNode.lat) &&\r\n          Number.isFinite(otherNode.lng) &&\r\n          otherNode.lat !== 0 &&\r\n          otherNode.lng !== 0\r\n        ) {\r\n          validCoordinates.push({ lat: otherNode.lat, lng: otherNode.lng });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  // 중복 좌표 제거\r\n  validCoordinates = Array.from(\r\n    new Set(validCoordinates.map(JSON.stringify))\r\n  ).map(JSON.parse);\r\n\r\n  // 🔹 좌표가 2개 이상인 경우 폴리라인 생성\r\n  if (validCoordinates.length > 1) {\r\n    const color = colors[highlightedIndex.value % colors.length]; // 선택된 리스트 색상\r\n    const polyline = new window.google.maps.Polyline({\r\n      path: validCoordinates,\r\n      geodesic: true,\r\n      strokeColor: color,\r\n      strokeOpacity: 1.0,\r\n      strokeWeight: 3,\r\n    });\r\n\r\n    polyline.setMap(map);\r\n    pathLines.push(polyline);\r\n  }\r\n};\r\n\r\nconst updatePopups = () => {\r\n  if (!map) {\r\n    console.error(\"❌ 지도(map)가 아직 초기화되지 않았습니다.\");\r\n    return;\r\n  }\r\n\r\n  if (highlightedIndex.value === null) return; // 선택된 리스트가 없으면 종료\r\n\r\n  const selectedGroup = topologyList.value[highlightedIndex.value]; // 선택된 리스트 가져오기\r\n  if (!selectedGroup) return;\r\n\r\n  popups.forEach((popup) => {\r\n    const matchingNode = selectedGroup.find(\r\n      (node) => node.uniqueId === popup.btnId\r\n    );\r\n\r\n    if (matchingNode) {\r\n      popup.setMap(map); // 선택된 리스트에 속한 팝업 표시\r\n    } else {\r\n      popup.setMap(null); // 다른 리스트의 팝업 숨김\r\n    }\r\n  });\r\n};\r\n\r\n// 완료시 이동\r\nconst goToNextStep = () => {\r\n  if (areAllCoordinatesSet(topologyList.value)) {\r\n    progressStore.setStepCondition(\"step3\", true);\r\n    router.push(\"/step4\");\r\n  } else {\r\n    dialogText = \"모든 아이템의 좌표를 입력하세요!\";\r\n    showDialog.value = true;\r\n    progressStore.setStepCondition(\"step3\", false);\r\n  }\r\n\r\n  console.log(JSON.stringify(topologyList.value));\r\n};\r\n// 완료 조건 함수\r\nconst areAllCoordinatesSet = (list) => {\r\n  return list.every((group) =>\r\n    group.every((node) => node.lat !== 0 && node.lng !== 0)\r\n  );\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.step_container {\r\n  display: flex;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  height: calc(100vh - var(--header-size));\r\n  width: 100vw;\r\n  overflow: hidden;\r\n\r\n  .treeArea {\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    gap: 40px;\r\n\r\n    .zone-column {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      background: rgba(0, 0, 255, 0.1);\r\n      border-radius: 10px;\r\n      z-index: 3;\r\n\r\n      p {\r\n        width: 15%;\r\n        text-align: center;\r\n        margin: auto;\r\n      }\r\n\r\n      .vertical-layout {\r\n        flex: 1;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n      }\r\n    }\r\n    .node-button {\r\n      width: 120px;\r\n      height: 50px;\r\n      background-color: #808080; // 기본 회색 (비활성화)\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      text-align: center;\r\n      cursor: pointer;\r\n      margin: 0px 10px;\r\n      transition: 0.3s;\r\n      opacity: 1;\r\n\r\n      &:hover {\r\n        transform: scale(1.05);\r\n      }\r\n\r\n      &.node-selected {\r\n        background-color: #2c3e50; // 선택된 리스트 기본 색\r\n      }\r\n\r\n      &.node-active {\r\n        opacity: 1;\r\n        pointer-events: auto;\r\n\r\n        &:hover {\r\n          filter: brightness(90%);\r\n        }\r\n      }\r\n\r\n      &.node-disabled {\r\n        pointer-events: none !important;\r\n\r\n        &:hover {\r\n          transform: none;\r\n        }\r\n      }\r\n\r\n      &:disabled {\r\n        cursor: not-allowed;\r\n        opacity: 0.4;\r\n      }\r\n    }\r\n  }\r\n  .connection-svg {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    z-index: 1;\r\n\r\n    line {\r\n      stroke-width: 2;\r\n      stroke-linecap: butt; /*  둥근 끝을 방지 */\r\n      transition: stroke 0.2s ease-in-out, stroke-width 0.3s ease-in-out;\r\n      mix-blend-mode: normal; /*  색상 중첩 방지 */\r\n    }\r\n\r\n    //  강조된 선 스타일\r\n    .highlighted-line {\r\n      stroke-width: 4px !important;\r\n      stroke-opacity: 1 !important;\r\n      opacity: 1 !important;\r\n    }\r\n\r\n    //  흐릿한 선 스타일\r\n    .dimmed-line {\r\n      stroke: lightgray !important;\r\n      stroke-opacity: 0.5 !important;\r\n    }\r\n  }\r\n\r\n  .mapArea {\r\n    width: 70%;\r\n  }\r\n}\r\n</style>","import script from \"./Step3View.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Step3View.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Step3View.vue?vue&type=style&index=0&id=e1fea858&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1fea858\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"step-container\">\r\n    <v-container class=\"plot-area\">\r\n      <!-- 🟢 탭 버튼 -->\r\n\r\n      <v-tabs v-model=\"selectedTab\" centered>\r\n        <v-tab value=\"cost\">건설 및 편익 비용</v-tab>\r\n        <v-tab value=\"carbon\">탄소배출량</v-tab>\r\n        <v-tab value=\"roi\">ROI</v-tab>\r\n      </v-tabs>\r\n\r\n      <v-row justify=\"end\" align=\"center\">\r\n        <v-col cols=\"auto\">\r\n          <v-select\r\n            v-model=\"selectedGroupIndex\"\r\n            :items=\"groupOptions\"\r\n            item-title=\"title\"\r\n            item-value=\"value\"\r\n            label=\"경로 선택\"\r\n            density=\"compact\"\r\n            variant=\"outlined\"\r\n            style=\"max-width: 250px\"\r\n            class=\"mb-0\"\r\n            hide-details\r\n          />\r\n        </v-col>\r\n\r\n        <v-btn @click=\"exportAllToPDF\" color=\"primary\"> 보고서 다운로드 </v-btn>\r\n      </v-row>\r\n\r\n      <!-- 🟡 차트 컨텐츠 -->\r\n      <v-window v-model=\"selectedTab\" class=\"chartContent\">\r\n        <!-- 건설 및 편익 비용 탭 -->\r\n        <v-window-item value=\"cost\">\r\n          <v-row>\r\n            <v-col cols=\"6\">\r\n              <h3>건설 비용</h3>\r\n              <canvas ref=\"barChart\"></canvas>\r\n            </v-col>\r\n            <v-col cols=\"6\">\r\n              <h3>편익 비용</h3>\r\n              <canvas ref=\"doughnutChart\"></canvas>\r\n            </v-col>\r\n          </v-row>\r\n        </v-window-item>\r\n\r\n        <!-- 탄소 배출량 탭 -->\r\n        <v-window-item value=\"carbon\">\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <h3>탄소 배출량 비교</h3>\r\n              <canvas ref=\"carbonChart\"></canvas>\r\n            </v-col>\r\n          </v-row>\r\n        </v-window-item>\r\n\r\n        <!-- ROI 탭 -->\r\n        <v-window-item value=\"roi\">\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <h3>ROI 분석</h3>\r\n              <canvas ref=\"roiChart\"></canvas>\r\n            </v-col>\r\n          </v-row>\r\n        </v-window-item>\r\n      </v-window>\r\n    </v-container>\r\n\r\n    <v-container class=\"table-container\">\r\n      <v-card class=\"custom-card h-auto\">\r\n        <v-data-table\r\n          :items=\"tableItems\"\r\n          class=\"custom-table\"\r\n          hide-default-footer\r\n          tabindex=\"-1\"\r\n        >\r\n        </v-data-table>\r\n      </v-card>\r\n    </v-container>\r\n  </div>\r\n\r\n  <div ref=\"pdfArea\" class=\"pdf-export-area\">\r\n    <h1>NWAs 및 송배전시스템의 편익 분석 시뮬레이션 결과</h1>\r\n\r\n    <hr />\r\n    <p class=\"summary\">Summary</p>\r\n    <p>\r\n      수요지역 (\r\n      <strong\r\n        >{{ map_topologyList[0].get(\"수요지역\").주소 }}, lat :\r\n        {{ map_topologyList[0].get(\"수요지역\").lat }}, lng :\r\n        {{ map_topologyList[0].get(\"수요지역\").lng }}\r\n      </strong>\r\n      ) 기준 필요전력\r\n      <strong> {{ map_topologyList[0].get(\"수요지역\").용량 }}</strong> MW 증설\r\n      시 NWAs 기반 편익분석 결과는 다음과 같음\r\n    </p>\r\n\r\n    <section>\r\n      <h3>1. 송배전망 증설 비용 요약</h3>\r\n      <p>\r\n        송배전망 건설비용은 송전선로 건설비용(TLC<sup>A</sup>), 송전접속\r\n        비용(TC<sup>B</sup>), 송전 손실비용(TLR<sup>C</sup>) 및 전력거래\r\n        비용(PTC<sup>D</sup>)의 합으로 산출됨.\r\n      </p>\r\n\r\n      <div class=\"expression\">\r\n        <p>\r\n          <strong>A)</strong> TLC = P<sub>d</sub> · ∑<sub>i</sub> C<sub\r\n            >L<sub>i</sub></sub\r\n          >L<sub>p,i</sub>\r\n        </p>\r\n        <p><strong>B)</strong> TC = P<sub>d</sub> · C<sub>TC</sub> · j</p>\r\n        <p><strong>C)</strong> TLR = P<sub>d</sub> · L<sub>TLR</sub></p>\r\n        <p><strong>D)</strong> PTC = P<sub>d</sub> · P<sub>E</sub></p>\r\n      </div>\r\n    </section>\r\n\r\n    <v-data-table\r\n      :items=\"tableItems\"\r\n      class=\"custom-table export-table\"\r\n      hide-default-footer\r\n      tabindex=\"-1\"\r\n    />\r\n\r\n    <div\r\n      v-for=\"(group, idx) in topologyList\"\r\n      :key=\"idx\"\r\n      style=\"page-break-after: auto\"\r\n    >\r\n      <h3>{{ idx + 2 }}. 경로 {{ idx + 1 }} 분석 결과</h3>\r\n\r\n      <div class=\"export-plot\">\r\n        <div class=\"export-bar\">\r\n          <h3>건설 비용</h3>\r\n          <canvas\r\n            :ref=\"(el) => renderAllBarChart(el, idx)\"\r\n            width=\"300\"\r\n            height=\"250\"\r\n            calss=\"barPlot\"\r\n          />\r\n        </div>\r\n        <div class=\"export-doughnut\">\r\n          <h3>편익 비용</h3>\r\n          <canvas\r\n            :ref=\"(el) => renderAllDoughnutChart(el, idx)\"\r\n            width=\"400\"\r\n            height=\"250\"\r\n            class=\"doughnutPlot\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script setup>\r\nimport { ref, onMounted, nextTick, watch, computed } from \"vue\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { useTopologyStore } from \"../store/topologyStore.js\";\r\n\r\nconst topologyStore = useTopologyStore();\r\n\r\nconst { topologyList } = storeToRefs(topologyStore);\r\n\r\nconst arrayToMap = (topologyList) => {\r\n  return topologyList.map((route) => {\r\n    const lossMap = {};\r\n\r\n    const node154 = route.find((n) => n.label === \"154\");\r\n    if (node154?.property) {\r\n      const 손실 = node154.property.find((p) => p.name === \"송전 손실단가\");\r\n      if (손실?.values) {\r\n        손실.values.forEach((v) => {\r\n          if (v.name && v.data !== undefined) {\r\n            lossMap[v.name] = v.data;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    const entries = route.map((node) => {\r\n      const label = node.label;\r\n      const normalizedLabel =\r\n        label !== \"수요지역\" ? label.replace(/-[A-Z]$/i, \"\") : label;\r\n\r\n      const props = node.property ?? [];\r\n\r\n      const formatted = {};\r\n\r\n      props.forEach((prop) => {\r\n        const name = prop.name;\r\n        const values = prop.values;\r\n\r\n        if (!name || !Array.isArray(values)) return;\r\n\r\n        // 1. 일반 데이터: 단일 값\r\n        if (values.length === 1 && \"data\" in values[0]) {\r\n          formatted[name] = values[0].data;\r\n        }\r\n\r\n        // 2. {name, data} 배열 → 객체\r\n        else if (values.every((v) => \"name\" in v && \"data\" in v)) {\r\n          formatted[name] = values.reduce((obj, v) => {\r\n            obj[v.name] = v.data;\r\n            return obj;\r\n          }, {});\r\n        }\r\n\r\n        // 3. 복합 구조 (ex: 배전망 건설 단가)\r\n        else if (\r\n          [\"배전망 건설 단가\", \"태양광 발전소 구축단가\"].includes(name)\r\n        ) {\r\n          formatted[name] = values.map((v) => ({\r\n            ...(v.constructionType && { constructionType: v.constructionType }),\r\n            ...(v.powerType && { powerType: v.powerType }),\r\n            costs: Array.isArray(v.costs)\r\n              ? v.costs.reduce((obj, item) => {\r\n                  obj[item.name] = item.data;\r\n                  return obj;\r\n                }, {})\r\n              : {},\r\n          }));\r\n        }\r\n\r\n        // 4. 그 외는 그대로\r\n        else {\r\n          formatted[name] = values;\r\n        }\r\n      });\r\n\r\n      if (lossMap[label] !== undefined) {\r\n        formatted[\"손실단가\"] = lossMap[label];\r\n      }\r\n\r\n      formatted[\"lat\"] = node.lat ?? 0;\r\n      formatted[\"lng\"] = node.lng ?? 0;\r\n\r\n      return [normalizedLabel, formatted];\r\n    });\r\n    return new Map(entries);\r\n  });\r\n};\r\n\r\nconst map_topologyList = arrayToMap(topologyList.value);\r\n\r\n// 🟢 현재 선택된 탭\r\nconst selectedTab = ref(\"cost\");\r\n\r\n// 📊 차트 레퍼런스\r\nconst barChart = ref(null);\r\nconst doughnutChart = ref(null);\r\nconst carbonChart = ref(null);\r\nconst roiChart = ref(null);\r\n\r\n// 📊 Chart.js 인스턴스 저장 변수\r\nlet barChartInstance = null;\r\nlet doughnutChartInstance = null;\r\nlet carbonChartInstance = null;\r\nlet roiChartInstance = null;\r\n\r\nconst tableItems = ref([]);\r\nconst pdfArea = ref(null);\r\n\r\n// 📌 3. 저장할 데이터들\r\nconst chartDataList = ref([]); // 각 그룹별 차트 데이터 { bar, doughnut, table }\r\nconst barDataValues = ref([{}]);\r\n\r\nconst doughnutDataValues = ref({\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"NWAs 편익 비용\",\r\n      data: [],\r\n      backgroundColor: [],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n});\r\n\r\nconst selectedGroupIndex = ref(0); // 현재 선택된 그룹 인덱스\r\n\r\n// 그룹 이름 목록 (ex: [\"경로 0\", \"경로 1\", ...])\r\nconst groupOptions = computed(() =>\r\n  topologyList.value.map((_, idx) => ({\r\n    title: `경로 ${idx + 1}`,\r\n    value: idx,\r\n  }))\r\n);\r\n\r\nconst updateCostView = () => {\r\n  const group = map_topologyList[selectedGroupIndex.value];\r\n  if (!group) return;\r\n\r\n  const result = calCost(group);\r\n\r\n  barDataValues.value = result.bar;\r\n  doughnutDataValues.value = result.doughnut;\r\n  tableItems.value = result.table;\r\n};\r\n\r\n// 📌 차트 생성 함수\r\nconst createCharts = async () => {\r\n  await nextTick(); // 🚀 DOM 렌더링이 완료될 때까지 기다림\r\n  destroyCharts(); // 기존 차트 삭제 (중복 방지)\r\n\r\n  // 🟢 건설 비용 막대 차트\r\n  if (barChart.value) {\r\n    try {\r\n      barChartInstance = new Chart(barChart.value.getContext(\"2d\"), {\r\n        type: \"bar\",\r\n        data: barDataValues.value,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function (context) {\r\n                  const value = context.parsed.y || 0;\r\n                  return (\r\n                    context.dataset.label +\r\n                    \": \" +\r\n                    (value / 1_000_000).toLocaleString() +\r\n                    \" 백만 원\"\r\n                  );\r\n                },\r\n              },\r\n            },\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              title: {\r\n                display: true,\r\n                text: \"비용 (백만원)\",\r\n              },\r\n              ticks: {\r\n                callback: function (value) {\r\n                  return (value / 1_000_000).toLocaleString() + \"백만\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(\"chart생성 오류\");\r\n    }\r\n  }\r\n\r\n  // 🟡 편익 비용 도넛 차트\r\n  if (doughnutChart.value) {\r\n    doughnutChartInstance = new Chart(doughnutChart.value.getContext(\"2d\"), {\r\n      type: \"doughnut\",\r\n      data: doughnutDataValues.value,\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: { position: \"top\" },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function (context) {\r\n                const value = context.raw;\r\n                const total = context.dataset.data.reduce(\r\n                  (sum, v) => sum + v,\r\n                  0\r\n                );\r\n                const percent = ((value / total) * 100).toFixed(2);\r\n\r\n                const valueInMillion = (value / 1_000_000).toLocaleString();\r\n\r\n                return `${context.label}: ${valueInMillion} 백만 원 (${percent}%)`;\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      plugins: [centerTextPlugin], // ✅ 여기!\r\n    });\r\n  }\r\n\r\n  // 🔴 탄소 배출량 차트\r\n  if (carbonChart.value) {\r\n    carbonChartInstance = new Chart(carbonChart.value.getContext(\"2d\"), {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\"2020\", \"2025\", \"2030\", \"2035\"],\r\n        datasets: [\r\n          {\r\n            label: \"탄소배출량\",\r\n            data: [100, 80, 50, 30],\r\n            borderColor: \"#E63946\",\r\n            backgroundColor: \"rgba(230, 57, 70, 0.2)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      },\r\n      options: { responsive: true, maintainAspectRatio: false },\r\n    });\r\n  }\r\n\r\n  // 🔵 ROI 차트\r\n  if (roiChart.value) {\r\n    roiChartInstance = new Chart(roiChart.value.getContext(\"2d\"), {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: [\"2020\", \"2025\", \"2030\", \"2035\"],\r\n        datasets: [\r\n          {\r\n            label: \"ROI\",\r\n            data: [1.2, 1.5, 2.0, 2.8],\r\n            backgroundColor: \"#264653\",\r\n          },\r\n        ],\r\n      },\r\n      options: { responsive: true, maintainAspectRatio: false },\r\n    });\r\n  }\r\n};\r\n\r\n// 비용계산 함수\r\nconst calCost = (group) => {\r\n  // 편익 = 송배전망 구축비용 - NWAs 비용\r\n\r\n  // 송전망 증설비용 = tlc + tc + tlr + ptc\r\n  let tlc = getTLC(group); // 송전선로 건설비용\r\n  let tc = getTC(group); // 송전 접속비용\r\n  let tlr = getTLR(group); // 송전 손실비용\r\n  let ptc = 0; // 전력거래 비용\r\n\r\n  let dlc = getDLC(group);\r\n\r\n  let NWAs = getNwasCostTotal(group);\r\n\r\n  // console.log(\"tlc : \", tlc);\r\n  // console.log(\"tc : \", tc);\r\n  // console.log(\"tlr : \", tlr);\r\n  // console.log(\"ptc : \", ptc);\r\n  // console.log(\"배전망 : \" + dlc);\r\n  // console.log(\"NWAs : \", NWAs);\r\n\r\n  // for (const [label, props] of group.entries()) {\r\n  //   console.log(\"노드:\", label, \"속성:\", props);\r\n  // }\r\n\r\n  const bar = getBarChartData({ tlc, tc, tlr, ptc, dlc, group });\r\n  const doughnut = getDoughnutChartData(group, NWAs);\r\n  const table = createCostBenefitTableForGroup(map_topologyList);\r\n\r\n  return { bar, doughnut, table }; // 리턴만! ref 갱신 X\r\n};\r\n\r\n// 송전선로 건설비용 계산함수\r\nconst getTLC = (group) => {\r\n  const getCost = (label) => group.get(label)?.[\"송전설로 건설단가\"] ?? 0;\r\n  const getLatLng = (label) =>\r\n    group.get(label) ? [group.get(label).lat, group.get(label).lng] : null;\r\n\r\n  let tlc = 0;\r\n\r\n  // 765 → 345\r\n  const latlng765 = getLatLng(\"765\");\r\n  const latlng345 = getLatLng(\"345\");\r\n  if (latlng765 && latlng345) {\r\n    const dist = getDistance(...latlng765, ...latlng345);\r\n    const cost = getCost(\"765\");\r\n    tlc += dist * cost * 1_000_000;\r\n  }\r\n\r\n  // 345 → 154 (여러 개 가능)\r\n  const latlng154List = [...group]\r\n    .filter(([label]) => label === \"154\")\r\n    .map(([, data]) => [data.lat, data.lng]);\r\n\r\n  if (latlng345 && latlng154List.length > 0) {\r\n    const cost = getCost(\"345\");\r\n    latlng154List.forEach(([lat, lng]) => {\r\n      const dist = getDistance(...latlng345, lat, lng);\r\n      tlc += dist * cost * 1_000_000;\r\n    });\r\n  }\r\n\r\n  // 154 → 154 → 22.9 (연결 순서대로)\r\n  const latlng229 = getLatLng(\"22.9\");\r\n  const cost154 = getCost(\"154\");\r\n\r\n  for (let i = 0; i < latlng154List.length - 1; i++) {\r\n    const [lat1, lng1] = latlng154List[i];\r\n    const [lat2, lng2] = latlng154List[i + 1];\r\n    const dist = getDistance(lat1, lng1, lat2, lng2);\r\n    tlc += dist * cost154 * 1_000_000;\r\n  }\r\n\r\n  // 마지막 154 → 22.9\r\n  if (latlng229 && latlng154List.length > 0) {\r\n    const [lat1, lng1] = latlng154List[latlng154List.length - 1];\r\n    const dist = getDistance(lat1, lng1, ...latlng229);\r\n    tlc += dist * cost154 * 1_000_000;\r\n  }\r\n\r\n  return Math.round(tlc);\r\n};\r\n\r\nconst getTC = (group) => {\r\n  const demandNode = group.get(\"수요지역\");\r\n  const rateNode = group.get(\"154\");\r\n\r\n  if (!demandNode || !rateNode) return 0;\r\n\r\n  // 1. 수요용량 (MW → kW)\r\n  const demandKW = Number(demandNode[\"용량\"] ?? 0) * 1000;\r\n\r\n  // 2. 사용 시간\r\n  const usageHoursPerDay = Number(\r\n    (demandNode[\"일별 전력 사용시간\"] ?? \"0\").trim()\r\n  );\r\n\r\n  // 3. 단가 정보 (송전 접속단가)\r\n  const 접속단가 = rateNode[\"송전 접속단가\"];\r\n  if (!접속단가) return 0;\r\n\r\n  const 기본단가 = Number(접속단가[\"기본 단가\"] ?? 0);\r\n  const 사용단가 = Number(접속단가[\"사용 단가\"] ?? 0);\r\n\r\n  // 4. 계산\r\n  const tc = demandKW * 사용단가 * usageHoursPerDay * 365 + demandKW * 기본단가;\r\n\r\n  return Math.round(tc); // 원 단위\r\n};\r\n\r\nconst getTLR = (group) => {\r\n  const firstLabel = group.keys().next().value;\r\n  const demandNode = group.get(\"수요지역\");\r\n  const rateNode = group.get(\"154\");\r\n\r\n  if (!demandNode || !rateNode) return 0;\r\n\r\n  const 손실단가객체 = rateNode[\"송전 손실단가\"];\r\n  if (!손실단가객체) return 0;\r\n\r\n  const 손실단가 = Number(손실단가객체[firstLabel] ?? 0);\r\n  const 수요용량 = Number(demandNode[\"용량\"] ?? 0); // MW\r\n  const 사용시간 = Number(demandNode[\"일별 전력 사용시간\"] ?? \"0\");\r\n\r\n  const tlr = 수요용량 * 손실단가 * 사용시간 * 365;\r\n\r\n  return Math.round(tlr); // 원 단위\r\n};\r\n\r\nconst getDLC = (group) => {\r\n  const node229 = group.get(\"22.9\");\r\n  const demandNode = group.get(\"수요지역\");\r\n\r\n  if (!node229 || !demandNode) return 0;\r\n\r\n  const distance = getDistance(\r\n    node229.lat,\r\n    node229.lng,\r\n    demandNode.lat,\r\n    demandNode.lng\r\n  );\r\n  const costsObj = node229[\"배전망 건설 단가\"]?.[0]?.costs;\r\n\r\n  const totalUnitCost =\r\n    Object.values(costsObj).reduce((sum, value) => {\r\n      const number = Number(value) || 0;\r\n      return sum + number;\r\n    }, 0) * 10000; // 만원 → 원\r\n\r\n  const dlc = distance * totalUnitCost;\r\n\r\n  return Math.round(dlc);\r\n};\r\n\r\nconst getNwasCostTotal = (group) => {\r\n  let nwasCosts = [];\r\n\r\n  for (const [label, node] of group.entries()) {\r\n    if (\r\n      ![\"태양광\", \"풍력\", \"해상풍력\"].some((prefix) => label.startsWith(prefix))\r\n    )\r\n      continue;\r\n\r\n    const type = label.startsWith(\"해상풍력\")\r\n      ? \"해상풍력\"\r\n      : label.startsWith(\"풍력\")\r\n      ? \"풍력\"\r\n      : \"태양광\";\r\n\r\n    const costKey = '발전소 구축단가'\r\n\r\n    const 구축단가 = node[costKey]?.[0];\r\n    if (!구축단가 || !Array.isArray(구축단가.costs)) continue;\r\n\r\n    const { constructionType, costs } = 구축단가;\r\n    const isNew = constructionType === \"신축\";\r\n    const capacityKey = type === \"태양광\" ? \"수요용량\" : \"여유용량\";\r\n    const 용량 = Number(node[capacityKey] ?? 0);\r\n\r\n    // 배열 → Map 형태로 바꾸기\r\n    const costMap = {};\r\n    costs.forEach((item) => {\r\n      if (item.name && item.data != null) {\r\n        costMap[item.name] = Number(item.data) || 0;\r\n      }\r\n    });\r\n\r\n    let 합계 = 0;\r\n\r\n    if (type === \"태양광\") {\r\n      const 건설비 = costMap[\"건설단가\"] ?? 0;\r\n      const 유지비 = costMap[\"유지비용\"] ?? 0;\r\n      const 접속비 = costMap[\"접속비용\"] ?? 0;\r\n      const 거래단가 = costMap[\"태양광 거래 단가 (SMP)\"] ?? 0;\r\n      const 거래비 = 용량 * 거래단가;\r\n\r\n      합계 = isNew\r\n        ? 건설비 + 유지비 + 접속비 + 거래비\r\n        : 유지비 + 접속비 + 거래비;\r\n    } else if (type === \"해상풍력\" || type === \"풍력\") {\r\n      const 기자재 = costMap[\"기자재 및 공사비\"] ?? 0;\r\n      const 인허가 = costMap[\"인허가/설계감리\"] ?? 0;\r\n      const 부대비 = costMap[\"기타 부대비\"] ?? 0;\r\n      const 유지비 = costMap[\"유지 비용\"] ?? 0;\r\n      const 거래단가 = costMap[\"풍력 거래 단가\"] ?? 0;\r\n      const 연계비 = costMap[\"접속비용\"] ?? 0;\r\n      const 거래비 = 용량 * 거래단가;\r\n\r\n      합계 = isNew\r\n        ? 기자재 + 인허가 + 부대비 + 유지비 + 거래비 + 연계비\r\n        : 유지비 + 거래비 + 연계비;\r\n    }\r\n\r\n    nwasCosts.push({ type, label, cost: Math.round(합계 * 1000) }); // 천원 → 원\r\n  }\r\n\r\n  console.log('NWAsGroup : ', group);\r\n  console.log('MWAs : ', nwasCosts)\r\n\r\n  return nwasCosts;\r\n};\r\n\r\nconst getDistance = (lat1, lng1, lat2, lng2) => {\r\n  const R = 6371e3; // 지구 반지름 (미터)\r\n  const rad = Math.PI / 180;\r\n\r\n  const φ1 = lat1 * rad;\r\n  const φ2 = lat2 * rad;\r\n  const Δφ = (lat2 - lat1) * rad;\r\n  const Δλ = (lng2 - lng1) * rad;\r\n\r\n  const a =\r\n    Math.sin(Δφ / 2) ** 2 + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) ** 2;\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return (R * c) / 1000; // km 단위\r\n};\r\n\r\nconst destroyCharts = () => {\r\n  if (barChartInstance) {\r\n    barChartInstance.destroy();\r\n    barChartInstance = null;\r\n  }\r\n  if (doughnutChartInstance) {\r\n    doughnutChartInstance.destroy();\r\n    doughnutChartInstance = null;\r\n  }\r\n  if (carbonChartInstance) {\r\n    carbonChartInstance.destroy();\r\n    carbonChartInstance = null;\r\n  }\r\n  if (roiChartInstance) {\r\n    roiChartInstance.destroy();\r\n    roiChartInstance = null;\r\n  }\r\n};\r\n\r\n// 차트용 데이터 만드는 함수\r\nconst getBarChartData = ({ tlc, tc, tlr, ptc = 0, dlc, group }) => {\r\n  const nwasList = getNwasCostTotal(group); // [{type, label, cost}, ...]\r\n\r\n  const labels = [\"송전선로\", \"배전망\", ...nwasList.map((n) => n.type)];\r\n  const data = [tlc + tc + tlr + ptc, dlc, ...nwasList.map((n) => n.cost)];\r\n  const backgroundColor = [\r\n    \"#4285F4\", // 송전\r\n    \"#FB8C00\", // 배전\r\n    ...nwasList.map((n) => {\r\n      if (n.type === \"태양광\") return \"#9E9E9E\";\r\n      if (n.type === \"풍력\") return \"#4CAF50\";\r\n      if (n.type === \"해상풍력\") return \"#00ACC1\";\r\n      return \"#CCCCCC\";\r\n    }),\r\n  ];\r\n\r\n  return {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"건설 비용\",\r\n        data,\r\n        backgroundColor,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nconst getDoughnutChartData = (group, nwases) => {\r\n  const totalInfraCost =\r\n    getTLC(group) + getTC(group) + getTLR(group) + getDLC(group);\r\n\r\n  if (!nwases || typeof nwases !== \"object\") {\r\n    console.warn(\"❗ NWAs가 객체가 아님:\", nwases);\r\n    return {\r\n      labels: [],\r\n      datasets: [{ label: \"NWAs 편익\", data: [], backgroundColor: [] }],\r\n    };\r\n  }\r\n\r\n  const data = Object.entries(nwases).map(([, nwas]) => {\r\n    const name = nwas.label || nwas.name || \"이름 없음\";\r\n    const benefit = totalInfraCost - (nwas.cost ?? 0); // ✅ 여기!!!\r\n    return {\r\n      name,\r\n      benefit: isNaN(benefit) ? 0 : benefit,\r\n    };\r\n  });\r\n\r\n  return {\r\n    labels: data.map((d) => d.name),\r\n    datasets: [\r\n      {\r\n        label: \"NWAs 편익 비용\",\r\n        data: data.map((d) => d.benefit),\r\n        backgroundColor: [\r\n          \"#9CA3AF\",\r\n          \"#FACC15\",\r\n          \"#4BC0C0\",\r\n          \"#FF6384\",\r\n          \"#36A2EB\",\r\n        ].slice(0, data.length),\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nconst centerTextPlugin = {\r\n  id: \"centerText\",\r\n  beforeDraw(chart) {\r\n    const { width, height, ctx } = chart;\r\n    ctx.save();\r\n\r\n    const labels = chart.data.labels;\r\n    const data = chart.data.datasets[0].data;\r\n\r\n    ctx.font = \"bold 14px sans-serif\";\r\n    ctx.fillStyle = \"#333\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n\r\n    const lines = labels.map((label, i) => {\r\n      const value = data[i];\r\n      const valueInMillion = (value / 1_000_000).toLocaleString();\r\n      return `${label}: ${valueInMillion} 백만 원`;\r\n    });\r\n\r\n    // 줄 수에 따라 중앙 정렬 위치 보정\r\n    const lineHeight = 20;\r\n    const offset = (lines.length - 1) * -0.5 * lineHeight;\r\n\r\n    lines.forEach((line, idx) => {\r\n      ctx.fillText(line, width / 2, height / 2 + offset + idx * lineHeight);\r\n    });\r\n\r\n    ctx.restore();\r\n  },\r\n};\r\n\r\nconst createCostBenefitTableForGroup = (map_topologyList) => {\r\n  return map_topologyList.map((group, idx) => {\r\n    const tlc = getTLC(group);\r\n    const tc = getTC(group);\r\n    const tlr = getTLR(group);\r\n    const ptc = 0;\r\n    const dlc = getDLC(group);\r\n    const NWAs = getNwasCostTotal(group);\r\n\r\n    const totalInfraCost = tlc + tc + tlr + ptc + dlc;\r\n\r\n    const nwasTotalCost = Object.values(NWAs).reduce(\r\n      (sum, item) => sum + (item.cost ?? item.value ?? 0),\r\n      0\r\n    );\r\n\r\n    const totalBenefit = totalInfraCost - nwasTotalCost;\r\n\r\n    return {\r\n      전력망: `경로 ${idx + 1}`,\r\n      송배전망_건설비용: totalInfraCost.toLocaleString() + \"원\",\r\n      NWAs_건설비용: nwasTotalCost.toLocaleString() + \"원\",\r\n      NWAs_편익: totalBenefit.toLocaleString() + \"원\",\r\n    };\r\n  });\r\n};\r\n\r\nconst exportAllToPDF = async () => {\r\n  chartDataList.value = [];\r\n\r\n  map_topologyList.forEach((group) => {\r\n    if (!group) return;\r\n    const result = calCost(group);\r\n    chartDataList.value.push(result);\r\n  });\r\n\r\n  await nextTick();\r\n\r\n  const element = pdfArea.value;\r\n  element.style.display = \"block\";\r\n\r\n  // ⚠ 렌더링 대기 (chart가 canvas에 그려질 시간 확보)\r\n  // await new Promise((res) => setTimeout(res, 500)); // 500ms 대기\r\n\r\n  await html2pdf()\r\n    .set({\r\n      margin: 0.5,\r\n      filename: \"전력망_전체_분석.pdf\",\r\n      image: { type: \"jpeg\", quality: 0.98 },\r\n      html2canvas: { scale: 2 },\r\n      jsPDF: { unit: \"in\", format: \"a4\", orientation: \"portrait\" },\r\n    pagebreak: { mode: ['css', 'legacy'] }, // ← 자동 줄바꿈 활성화\r\n    })\r\n    .from(element)\r\n    .save();\r\n\r\n  // element.style.display = \"none\";\r\n};\r\n\r\nconst barChartInstances = [];\r\nconst doughnutChartInstances = [];\r\n\r\nconst renderAllBarChart = (canvasEl, idx) => {\r\n  if (!canvasEl || !chartDataList.value[idx]) return;\r\n\r\n  // 이전 차트 제거\r\n  if (barChartInstances[idx]) {\r\n    barChartInstances[idx].destroy();\r\n  }\r\n\r\n  const ctx = canvasEl.getContext(\"2d\");\r\n\r\n  barChartInstances[idx] = new Chart(ctx, {\r\n    type: \"bar\",\r\n    data: chartDataList.value[idx].bar,\r\n    options: {\r\n      responsive: false,\r\n      animation: false,\r\n      plugins: { legend: { display: false } },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          title: {\r\n            display: true,\r\n            text: \"비용 (백만원)\",\r\n          },\r\n          ticks: {\r\n            callback: function (value) {\r\n              return (value / 1_000_000).toLocaleString() + \"백만\";\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nconst renderAllDoughnutChart = (canvasEl, idx) => {\r\n  if (!canvasEl || !chartDataList.value[idx]) return;\r\n\r\n  if (doughnutChartInstances[idx]) {\r\n    doughnutChartInstances[idx].destroy();\r\n  }\r\n\r\n  const ctx = canvasEl.getContext(\"2d\");\r\n  doughnutChartInstances[idx] = new Chart(ctx, {\r\n    type: \"doughnut\",\r\n    data: chartDataList.value[idx].doughnut,\r\n    options: {\r\n      responsive: false,\r\n      animation: false,\r\n      plugins: { legend: { position: \"bottom\" } },\r\n    },\r\n  });\r\n};\r\n\r\n// 🚀 onMounted에서 차트 생성\r\nonMounted(() => {\r\n  const group = map_topologyList[selectedGroupIndex.value];\r\n  const result = calCost(group);\r\n\r\n  barDataValues.value = result.bar;\r\n  doughnutDataValues.value = result.doughnut;\r\n  tableItems.value = result.table;\r\n\r\n  createCharts();\r\n});\r\n\r\n// 🚀 탭이 바뀔 때마다 차트 다시 생성\r\nwatch(selectedTab, createCharts);\r\n\r\nwatch(selectedGroupIndex, async () => {\r\n  await nextTick(); // 반응형 DOM/변수 업데이트 대기\r\n\r\n  if (selectedGroupIndex.value == null) return;\r\n\r\n  updateCostView();\r\n  createCharts();\r\n});\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.step-container {\r\n  display: flex;\r\n  gap: 16px; /* 간격 추가 */\r\n  padding: 20px;\r\n  width: 1700px;\r\n  margin: 0px auto;\r\n\r\n  .plot-area {\r\n    flex: 1;\r\n    background-color: white;\r\n    border-radius: 8px;\r\n    max-width: 1000px;\r\n    height: 700px;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n    margin-top: 15px;\r\n\r\n    canvas {\r\n      max-height: 500px;\r\n    }\r\n\r\n    .chartContent {\r\n      height: 600px;\r\n      padding: 20px;\r\n    }\r\n  }\r\n\r\n  .table-container {\r\n    flex: 0.4;\r\n    overflow: auto;\r\n  }\r\n\r\n  .custom-card {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .custom-table {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n:deep(.v-data-table thead) {\r\n  background-color: #1976d2 !important;\r\n  color: white !important;\r\n}\r\n\r\n:deep(.v-data-table .v-data-table-header__content) {\r\n  justify-content: center;\r\n}\r\n\r\n:deep(.v-data-table tbody tr:hover) {\r\n  background-color: rgba(25, 118, 210, 0.1) !important;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n:deep(.v-icon) {\r\n  display: none !important;\r\n}\r\n\r\n:deep(.v-data-table td) {\r\n  user-select: none;\r\n  cursor: default;\r\n}\r\n\r\n:deep(.v-data-table) {\r\n  text-align: center;\r\n}\r\n\r\n.pdf-export-area {\r\n  width: 700px; /* A4: 210mm x 297mm at 96dpi */\r\n  background-color: white;\r\n  color: #000;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  h1 {\r\n    align-self: center;\r\n    text-align: center;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\ncanvas {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.expression {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.export-table {\r\n  width: 90%;\r\n  align-self: center;\r\n  align-content: center;\r\n  margin: 20px auto;\r\n}\r\n\r\n.export-plot {\r\n  display: flex;\r\n\r\n  .export-bar {\r\n    width: 50%;\r\n    .barPlot {\r\n      width: 100%;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n\r\n  .export-doughnut {\r\n    width: 50%;\r\n  }\r\n}\r\n</style>","import script from \"./Step4View.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Step4View.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Step4View.vue?vue&type=style&index=0&id=71accc27&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71accc27\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport { useProgressStore } from \"@/store/progressStore\";\nimport { nextTick } from \"vue\";\n\nimport Step1 from \"../views/Step1View.vue\";\nimport Step2 from \"../views/Step2View.vue\";\nimport Step3 from \"../views/Step3View.vue\";\nimport Step4 from \"../views/Step4View.vue\";\n\nconst routes = [\n  { path: \"/\", redirect: \"/step1\" },\n  { path: '/:catchAll(.*)', redirect: '/step1' },\n  { path: \"/step1\", name: \"step1\", component: Step1, meta: { step: 1 } },\n  { path: \"/step2\", name: \"step2\", component: Step2, meta: { step: 2 } },\n  { path: \"/step3\", name: \"step3\", component: Step3, meta: { step: 3 } },\n  { path: \"/step4\", name: \"step4\", component: Step4, meta: { step: 4 } },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory('/nwas.github.io/'),\n  routes,\n});\n\n//  이전 Step으로 이동 시 이후 Step 완료 취소\nrouter.beforeEach(async (to, from, next) => {\n  await nextTick(); // Pinia 상태 업데이트 후 실행\n  const progressStore = useProgressStore(); //  Pinia 상태 가져오기\n\n  const toStep = to.meta.step;   // 이동할 Step 번호\n  const fromStep = from.meta.step; // 현재 Step 번호\n\n  if (typeof toStep === \"number\" && typeof fromStep === \"number\" && toStep < fromStep) {\n    console.log(`🔄 Step${fromStep} → Step${toStep} 이동 → 이후 Step 초기화`);\n    \n    for (let i = fromStep; i > toStep; i--) {\n      const stepKey = `step${i}`;\n      console.log(`❌ ${stepKey} 완료 취소`);\n      progressStore.setStepCondition(stepKey, false);\n    }\n  }\n\n  next();\n});\n\nexport default router;","// Styles\nimport '@mdi/font/css/materialdesignicons.css'\nimport 'vuetify/styles'\n\n// Vuetify\nimport { createVuetify } from 'vuetify'\n\nexport default createVuetify(\n  // https://vuetifyjs.com/en/introduction/why-vuetify/#feature-guides\n)\n","import { createApp } from 'vue'\r\nimport { loadFonts } from './plugins/webfontloader'\r\nimport { BootstrapVue3 } from 'bootstrap-vue-3'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport vuetify from './plugins/vuetify'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap-vue-3/dist/bootstrap-vue-3.css'\r\nimport './common/commonStyle.scss'\r\n\r\nloadFonts()\r\n\r\ncreateApp(App)\r\n  .use(router)\r\n  .use(vuetify)\r\n  .use(BootstrapVue3)\r\n  .use(createPinia())\r\n  .mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + (chunkId === 53 ? \"webfontloader\" : chunkId) + \".\" + {\"53\":\"0414c632\",\"234\":\"bb71d3c9\",\"353\":\"a818acae\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"nwas_site:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/nwas/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknwas_site\"] = self[\"webpackChunknwas_site\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(792); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["async","loadFonts","webFontLoader","load","google","families","useProgressStore","defineStore","currentStep","ref","stepConditions","step1","step2","step3","step4","setStepCondition","step","status","value","replace","isStepCompleted","allstepCondition","route","useRoute","router","useRouter","progressStore","dialogText","showDialog","steps","path","name","label","key","isActive","isCompleted","stepKey","computed","navigateToStep","push","__exports__","useDropZoneStore","dropZones","id","items","isValid","localCapacity","getAvailableSuffix","usedSuffixes","alphabet","i","length","suffix","includes","addItemToZone","zoneId","item","zone","find","z","existingSuffixes","filter","startsWith","map","split","test","newSuffix","newLabel","newItem","uniqueId","crypto","randomUUID","lat","lng","updateDemandVol","saveDemandArea","address","capacity","newHoursPerDay","zone6","property","values","setProperty","forEach","category","prop","unit","console","log","data","removeItemFromZone","getProperty","group","element","useTopologyStore","MAX_TOPOLOGY_COUNT","topologyList","addTopology","newTopology","isNotAdd","removeTopology","index","splice","setTopologyList","newList","clearTopologyList","setCoordinates","Array","isArray","Object","assign","error","topologyStore","dropZoneStore","props","__props","emit","__emit","dialog","topologyData","expansionType","powerType","solarConstructionType","updateValue","event","newValues","target","watch","newVal","nextTick","JSON","parse","stringify","calculateDepth","immediate","deep","hasNamedValues","some","val","trim","modelValue","closeDialog","isSimpleArray","newData","save","targetZoneIndex","findIndex","subItem","targetItemIndex","targetItem","updatedProperty","filteredCosts","getFilteredConstructionCosts","constructionType","costs","cost","Number","modify","array","depth","sharedPropNames","sharedProps","originalProperty","String","newProperty","matched","p","updateTopologyListProperty","updatedItem","isConstructionCost","buildTime","dialogId","dialogUniqueId","dialogLabel","openDialog","handleSave","useItemStore","transStore","distribStore","nwasStore","store","storeToRefs","itemStore","startItem","maxTopology","demandArea","electricCapacity","hoursPerDay","openPostcode","window","daum","Postcode","oncomplete","open","startDrag","dataTransfer","effectAllowed","setData","onDrop","draggedItem","getData","resetZoneColors","onDragOver","preventDefault","dropEffect","validateHoursPerDay","newAddress","newCapacity","newZones","relevantZones","allFilled","every","reduce","product","removeItem","isStep1Completed","demandZone","hasDemandData","goToNextStep","defaultButtonColor","defaultTextColor","clickedButtons","completedLines","pendingLines","allowedZoneOrder","currentZoneIndex","listItem","comparison","colors","textColors","resetButtons","flat","node","join","header","document","querySelector","style","backgroundColor","color","clearLines","calculateMaxTopology","onMounted","addEventListener","onBeforeRouteLeave","onUnmounted","removeEventListener","connectButton","buttonId","button","currentTarget","rect","getBoundingClientRect","highlightInvalidZone","zone765","zone765HasItems","previousZone","isSkippingZone765","isMultiSelectableZone","isNextZone","isContinuingMultiSelect","btn","lastSelectedZone","isValidTransition","x","left","width","y","top","height","lastIndex","x1","y1","x2","y2","addList","structuredClone","zoneElement","classList","add","setTimeout","remove","getNextZoneName","nextZone","nextZoneId","draggedItemIndex","dragStart","dropItem","updatedList","deleteTopology","isStep2Completed","temp","groupIdx","warn","buttons","computedLines","highlightedIndex","nextNodeId","selectedNodes","Set","selectedLines","pathLines","zoneOrder","updateLines","waitForGoogleMaps","setInterval","maps","clearInterval","initMap","found","list","isNodeInSelectedList","has","orderedZones","zoneMap","Map","nodes","seenIds","get","requestAnimationFrame","from","querySelectorAll","buttonMap","zoneIndex","getAttribute","nodeId","set","listIndex","nodeIndex","nextNode","zNode","nextZoneIndex","startButton","endButton","startRect","endRect","scrollY","startNodeId","endNodeId","highlightList","clear","selectedButton","line","lineIndex","markers","marker","matchingNode","btnId","setIcon","svgMarker","anchor","Point","scaledSize","Size","updatePolyline","updatePopups","computedStrokeColors","loadGoogleMaps","Promise","resolve","reject","script","createElement","src","defer","onload","onerror","head","appendChild","getSIG_CD","flatNodes","CustomPopup","OverlayView","constructor","position","content","super","Error","this","containerDiv","className","display","transform","boxShadow","borderRadius","whiteSpace","innerHTML","title","body","closeBtn","hide","onAdd","getPanes","floatPane","show","draw","projection","getProjection","pos","fromLatLngToDivPixel","onRemove","parentElement","removeChild","addressObj","coordinates","getCoordinatesFromAddress","mapElement","getElementById","zoom","mapTypeId","styles","elementType","stylers","visibility","bounds","LatLngBounds","extend","fitBounds","getCenter","addListenerOnce","setZoom","Marker","icon","customPopup","setMap","addListener","addMarker","latLng","fillColor","fillOpacity","strokeWeight","strokeColor","scale","geocoder","Geocoder","geocode","results","location","geometry","mapRef","popups","btnCoordinates","newCoord","groupIndex","selectedColor","allNodes","currentIndex","markerExists","setPosition","popup","polyline","selectedGroup","validCoordinates","isFinite","otherGroup","otherNode","Polyline","geodesic","strokeOpacity","areAllCoordinatesSet","arrayToMap","lossMap","node154","n","손실","v","undefined","entries","normalizedLabel","formatted","obj","map_topologyList","selectedTab","barChart","doughnutChart","carbonChart","roiChart","barChartInstance","doughnutChartInstance","carbonChartInstance","roiChartInstance","tableItems","pdfArea","chartDataList","barDataValues","doughnutDataValues","labels","datasets","borderWidth","selectedGroupIndex","groupOptions","_","idx","updateCostView","result","calCost","bar","doughnut","table","createCharts","destroyCharts","Chart","getContext","type","options","responsive","maintainAspectRatio","plugins","legend","tooltip","callbacks","context","parsed","dataset","toLocaleString","scales","beginAtZero","text","ticks","callback","err","raw","total","sum","percent","toFixed","valueInMillion","centerTextPlugin","borderColor","fill","tlc","getTLC","tc","getTC","tlr","getTLR","ptc","dlc","getDLC","NWAs","getNwasCostTotal","getBarChartData","getDoughnutChartData","createCostBenefitTableForGroup","getCost","getLatLng","latlng765","latlng345","dist","getDistance","latlng154List","latlng229","cost154","lat1","lng1","lat2","lng2","Math","round","demandNode","rateNode","demandKW","usageHoursPerDay","접속단가","기본단가","사용단가","firstLabel","keys","next","손실단가객체","손실단가","수요용량","사용시간","node229","distance","costsObj","totalUnitCost","number","nwasCosts","prefix","costKey","구축단가","isNew","capacityKey","용량","costMap","합계","건설비","유지비","접속비","거래단가","거래비","기자재","인허가","부대비","연계비","R","rad","PI","φ1","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","destroy","nwasList","nwases","totalInfraCost","nwas","benefit","isNaN","d","slice","beforeDraw","chart","ctx","font","fillStyle","textAlign","textBaseline","lines","lineHeight","offset","fillText","restore","nwasTotalCost","totalBenefit","전력망","송배전망_건설비용","NWAs_건설비용","NWAs_편익","exportAllToPDF","html2pdf","margin","filename","image","quality","html2canvas","jsPDF","format","orientation","pagebreak","mode","barChartInstances","doughnutChartInstances","renderAllBarChart","canvasEl","animation","renderAllDoughnutChart","routes","redirect","component","Step1","meta","Step2","Step3","Step4","createRouter","history","createWebHashHistory","beforeEach","to","toStep","fromStep","createVuetify","createApp","App","use","vuetify","BootstrapVue3","createPinia","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","__proto__","t","then","ns","create","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","e","chunkId","all","promises","u","miniCssF","g","globalThis","Function","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","needAttach","scripts","getElementsByTagName","s","charset","timeout","nc","setAttribute","onScriptComplete","prev","clearTimeout","doneFns","parentNode","bind","Symbol","toStringTag","installedChunks","installedChunkData","promise","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}